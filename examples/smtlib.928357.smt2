(set-info :smt-lib-version 2.6)
(set-logic UFLIA)
(set-info :source |Benchmarks from the paper: "Extending Sledgehammer with SMT Solvers" by Jasmin Blanchette, Sascha Bohme, and Lawrence C. Paulson, CADE 2011.  Translated to SMT2 by Andrew Reynolds and Morgan Deters.|)
(set-info :category "industrial")
(set-info :status unknown)
(declare-sort S1 0)
(declare-sort S2 0)
(declare-sort S3 0)
(declare-sort S4 0)
(declare-sort S5 0)
(declare-sort S6 0)
(declare-sort S7 0)
(declare-sort S8 0)
(declare-sort S9 0)
(declare-sort S10 0)
(declare-sort S11 0)
(declare-sort S12 0)
(declare-sort S13 0)
(declare-sort S14 0)
(declare-sort S15 0)
(declare-sort S16 0)
(declare-sort S17 0)
(declare-fun f1 () S1)
(declare-fun f2 () S1)
(declare-fun f3 (S3 S2) S1)
(declare-fun f4 (S4 S2) S3)
(declare-fun f5 () S4)
(declare-fun f6 (S6 S5) S1)
(declare-fun f7 () S6)
(declare-fun f8 (S6 S6) S1)
(declare-fun f9 () S6)
(declare-fun f10 (S7 S6) S6)
(declare-fun f11 (S5) S7)
(declare-fun f12 (S8 S4) S5)
(declare-fun f13 (S9 S10) S8)
(declare-fun f14 (S11 S4) S9)
(declare-fun f15 () S11)
(declare-fun f16 () S4)
(declare-fun f17 () S10)
(declare-fun f18 () S4)
(declare-fun f19 (S10) S4)
(declare-fun f20 (S6 S6) S1)
(declare-fun f21 (S5 S6) S1)
(declare-fun f22 (S13 S5) S14)
(declare-fun f23 (S15 S12) S13)
(declare-fun f24 () S15)
(declare-fun f25 (S16 Int) S14)
(declare-fun f26 () S16)
(declare-fun f27 (S6) S6)
(declare-fun f28 (S17 S14) Int)
(declare-fun f29 () S17)
(assert (not (= f1 f2)))
(assert (forall ((?v0 S2) (?v1 S2)) (= (= (f3 (f4 f5 ?v0) ?v1) f1) (= ?v0 ?v1))))
(assert (forall ((?v0 S5)) (= (= (f6 f7 ?v0) f1) false)))
(assert (not (= (f8 f9 (f10 (f11 (f12 (f13 (f14 f15 f16) f17) f18)) f9)) f1)))
(assert (= (f8 f9 (f10 (f11 (f12 (f13 (f14 f15 f5) f17) (f19 f17))) f9)) f1))
(assert (= (f20 f9 (f10 (f11 (f12 (f13 (f14 f15 f16) f17) f18)) f9)) f1))
(assert (forall ((?v0 S6)) (= (f8 ?v0 f9) f1)))
(assert (forall ((?v0 S4) (?v1 S10) (?v2 S4) (?v3 S4) (?v4 S10) (?v5 S4)) (= (= (f12 (f13 (f14 f15 ?v0) ?v1) ?v2) (f12 (f13 (f14 f15 ?v3) ?v4) ?v5)) (and (= ?v0 ?v3) (and (= ?v1 ?v4) (= ?v2 ?v5))))))
(assert (forall ((?v0 S6) (?v1 S6)) (=> (= (f8 ?v0 ?v1) f1) (= (f20 ?v0 ?v1) f1))))
(assert (forall ((?v0 S6) (?v1 S6) (?v2 S6)) (=> (= (f8 ?v0 ?v1) f1) (=> (= (f8 ?v2 ?v0) f1) (= (f8 ?v2 ?v1) f1)))))
(assert (forall ((?v0 S6) (?v1 S5) (?v2 S6)) (let ((?v_0 (f11 ?v1))) (=> (= (f8 ?v0 (f10 ?v_0 f9)) f1) (=> (= (f8 ?v0 ?v2) f1) (= (f8 ?v0 (f10 ?v_0 ?v2)) f1))))))
(assert (forall ((?v0 S6) (?v1 S5) (?v2 S6)) (let ((?v_0 (f11 ?v1))) (=> (= (f8 ?v0 (f10 ?v_0 ?v2)) f1) (and (= (f8 ?v0 (f10 ?v_0 f9)) f1) (= (f8 ?v0 ?v2) f1))))))
(assert (forall ((?v0 S6) (?v1 S4) (?v2 S10) (?v3 S4) (?v4 S4)) (let ((?v_0 (f13 (f14 f15 ?v1) ?v2))) (=> (= (f8 ?v0 (f10 (f11 (f12 ?v_0 ?v3)) f9)) f1) (=> (forall ((?v5 S2) (?v6 S2)) (=> (= (f3 (f4 ?v3 ?v5) ?v6) f1) (= (f3 (f4 ?v4 ?v5) ?v6) f1))) (= (f8 ?v0 (f10 (f11 (f12 ?v_0 ?v4)) f9)) f1))))))
(assert (forall ((?v0 S6) (?v1 S4) (?v2 S10) (?v3 S4) (?v4 S4)) (=> (= (f8 ?v0 (f10 (f11 (f12 (f13 (f14 f15 ?v1) ?v2) ?v3)) f9)) f1) (=> (forall ((?v5 S2) (?v6 S2)) (=> (= (f3 (f4 ?v4 ?v5) ?v6) f1) (= (f3 (f4 ?v1 ?v5) ?v6) f1))) (= (f8 ?v0 (f10 (f11 (f12 (f13 (f14 f15 ?v4) ?v2) ?v3)) f9)) f1)))))
(assert (forall ((?v0 S5) (?v1 S5) (?v2 S6)) (=> (= (f21 ?v0 (f10 (f11 ?v1) ?v2)) f1) (=> (=> (= ?v0 ?v1) false) (=> (=> (= (f21 ?v0 ?v2) f1) false) false)))))
(assert (forall ((?v0 S5) (?v1 S6) (?v2 S5)) (=> (=> (not (= (f21 ?v0 ?v1) f1)) (= ?v0 ?v2)) (= (f21 ?v0 (f10 (f11 ?v2) ?v1)) f1))))
(assert (forall ((?v0 S6) (?v1 S4) (?v2 S10) (?v3 S4) (?v4 S4) (?v5 S4)) (=> (= (f8 ?v0 (f10 (f11 (f12 (f13 (f14 f15 ?v1) ?v2) ?v3)) f9)) f1) (=> (forall ((?v6 S2) (?v7 S2)) (=> (= (f3 (f4 ?v4 ?v6) ?v7) f1) (forall ((?v8 S2)) (=> (forall ((?v9 S2)) (=> (= (f3 (f4 ?v1 ?v9) ?v7) f1) (= (f3 (f4 ?v3 ?v9) ?v8) f1))) (= (f3 (f4 ?v5 ?v6) ?v8) f1))))) (= (f8 ?v0 (f10 (f11 (f12 (f13 (f14 f15 ?v4) ?v2) ?v5)) f9)) f1)))))
(assert (forall ((?v0 S5)) (=> (= (f21 ?v0 f9) f1) false)))
(assert (forall ((?v0 S12) (?v1 S4) (?v2 S10) (?v3 S4)) (= (f22 (f23 f24 ?v0) (f12 (f13 (f14 f15 ?v1) ?v2) ?v3)) (f25 f26 0))))
(assert (forall ((?v0 S5) (?v1 S6)) (not (= f9 (f10 (f11 ?v0) ?v1)))))
(assert (forall ((?v0 S5) (?v1 S6)) (not (= (f10 (f11 ?v0) ?v1) f9))))
(assert (forall ((?v0 S5) (?v1 S5)) (= (= (f21 ?v0 (f10 (f11 ?v1) f9)) f1) (= ?v0 ?v1))))
(assert (forall ((?v0 S6) (?v1 S5)) (=> (= ?v0 f9) (not (= (f21 ?v1 ?v0) f1)))))
(assert (forall ((?v0 S6)) (= (= (f27 ?v0) f9) (forall ((?v1 S5)) (not (= (f6 ?v0 ?v1) f1))))))
(assert (forall ((?v0 S5)) (= (= (f21 ?v0 f9) f1) false)))
(assert (forall ((?v0 S6)) (= (= f9 (f27 ?v0)) (forall ((?v1 S5)) (not (= (f6 ?v0 ?v1) f1))))))
(assert (forall ((?v0 S6)) (= (forall ((?v1 S5)) (=> (= (f21 ?v1 f9) f1) (= (f6 ?v0 ?v1) f1))) true)))
(assert (forall ((?v0 S6)) (= (exists ((?v1 S5)) (and (= (f21 ?v1 f9) f1) (= (f6 ?v0 ?v1) f1))) false)))
(assert (forall ((?v0 S6)) (= (exists ((?v1 S5)) (= (f21 ?v1 ?v0) f1)) (not (= ?v0 f9)))))
(assert (forall ((?v0 S6)) (= (forall ((?v1 S5)) (not (= (f21 ?v1 ?v0) f1))) (= ?v0 f9))))
(assert (= f9 (f27 f7)))
(assert (forall ((?v0 S5) (?v1 S6)) (=> (= (f21 ?v0 ?v1) f1) (= (f10 (f11 ?v0) ?v1) ?v1))))
(assert (forall ((?v0 S5) (?v1 S6) (?v2 S5)) (=> (= (f21 ?v0 ?v1) f1) (= (f21 ?v0 (f10 (f11 ?v2) ?v1)) f1))))
(assert (forall ((?v0 S5) (?v1 S6) (?v2 S6)) (let ((?v_0 (f11 ?v0))) (=> (not (= (f21 ?v0 ?v1) f1)) (=> (not (= (f21 ?v0 ?v2) f1)) (= (= (f10 ?v_0 ?v1) (f10 ?v_0 ?v2)) (= ?v1 ?v2)))))))
(assert (forall ((?v0 S5) (?v1 S6) (?v2 S5)) (= (= (f6 (f10 (f11 ?v0) ?v1) ?v2) f1) (or (= ?v0 ?v2) (= (f6 ?v1 ?v2) f1)))))
(assert (forall ((?v0 S5) (?v1 S5) (?v2 S6)) (= (= (f21 ?v0 (f10 (f11 ?v1) ?v2)) f1) (or (= ?v0 ?v1) (= (f21 ?v0 ?v2) f1)))))
(assert (forall ((?v0 S14)) (= (f25 f26 (f28 f29 ?v0)) ?v0)))
(assert (forall ((?v0 Int)) (=> (<= 0 ?v0) (= (f28 f29 (f25 f26 ?v0)) ?v0))))
(assert (forall ((?v0 Int)) (=> (< ?v0 0) (= (f28 f29 (f25 f26 ?v0)) 0))))
(check-sat)
(exit)
