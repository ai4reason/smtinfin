(set-info :smt-lib-version 2.6)
(set-logic UFLIA)
(set-info :source |Benchmarks from the paper: "Extending Sledgehammer with SMT Solvers" by Jasmin Blanchette, Sascha Bohme, and Lawrence C. Paulson, CADE 2011.  Translated to SMT2 by Andrew Reynolds and Morgan Deters.|)
(set-info :category "industrial")
(set-info :status unknown)
(declare-sort S1 0)
(declare-sort S2 0)
(declare-sort S3 0)
(declare-sort S4 0)
(declare-sort S5 0)
(declare-sort S6 0)
(declare-sort S7 0)
(declare-sort S8 0)
(declare-sort S9 0)
(declare-sort S10 0)
(declare-sort S11 0)
(declare-sort S12 0)
(declare-sort S13 0)
(declare-sort S14 0)
(declare-sort S15 0)
(declare-sort S16 0)
(declare-sort S17 0)
(declare-sort S18 0)
(declare-sort S19 0)
(declare-sort S20 0)
(declare-sort S21 0)
(declare-sort S22 0)
(declare-sort S23 0)
(declare-sort S24 0)
(declare-sort S25 0)
(declare-sort S26 0)
(declare-sort S27 0)
(declare-sort S28 0)
(declare-sort S29 0)
(declare-sort S30 0)
(declare-sort S31 0)
(declare-sort S32 0)
(declare-fun f1 () S1)
(declare-fun f2 () S1)
(declare-fun f3 (S3 S2) S4)
(declare-fun f4 () S3)
(declare-fun f5 (S5 S6) S4)
(declare-fun f6 (S7 S8) S5)
(declare-fun f7 (S9 S6) S7)
(declare-fun f8 () S9)
(declare-fun f9 (S2) S6)
(declare-fun f10 (S10 S2) S8)
(declare-fun f11 () S10)
(declare-fun f12 (S2) S6)
(declare-fun f13 (S11 S4) S1)
(declare-fun f14 (S4) S11)
(declare-fun f15 (S12 S2) S1)
(declare-fun f16 (S2) S12)
(declare-fun f17 (S4) S11)
(declare-fun f18 (S2) S12)
(declare-fun f19 (S13 S4) S4)
(declare-fun f20 (S14 S4) S13)
(declare-fun f21 () S14)
(declare-fun f22 (S15 S4) S3)
(declare-fun f23 () S15)
(declare-fun f24 (S16 S4) S2)
(declare-fun f25 (S17 S2) S16)
(declare-fun f26 () S17)
(declare-fun f27 (S18 S2) S2)
(declare-fun f28 (S19 S2) S18)
(declare-fun f29 () S19)
(declare-fun f30 () S11)
(declare-fun f31 () S12)
(declare-fun f32 (S11 S11) S1)
(declare-fun f33 () S11)
(declare-fun f34 (S20 S11) S11)
(declare-fun f35 (S4) S20)
(declare-fun f36 () S2)
(declare-fun f37 () S11)
(declare-fun f38 (S2 S12) S1)
(declare-fun f39 () S12)
(declare-fun f40 (S21 S12) S11)
(declare-fun f41 (S3) S21)
(declare-fun f42 (S24 S23) S1)
(declare-fun f43 (S6 S22) S24)
(declare-fun f44 () S12)
(declare-fun f45 (S25 S11) S12)
(declare-fun f46 (S16) S25)
(declare-fun f47 (S26 S12) S12)
(declare-fun f48 (S2) S26)
(declare-fun f49 (S18) S26)
(declare-fun f50 (S13) S20)
(declare-fun f51 (S4 S11) S1)
(declare-fun f52 (S28 S4) S29)
(declare-fun f53 (S30 S27) S28)
(declare-fun f54 () S30)
(declare-fun f55 (S31 Int) S29)
(declare-fun f56 () S31)
(declare-fun f57 (S11) S11)
(declare-fun f58 (S12) S12)
(declare-fun f59 (S32 S29) Int)
(declare-fun f60 () S32)
(assert (not (= f1 f2)))
(assert (forall ((?v0 S2)) (= (f3 f4 ?v0) (f5 (f6 (f7 f8 (f9 ?v0)) (f10 f11 ?v0)) (f12 ?v0)))))
(assert (forall ((?v0 S4) (?v1 S4)) (= (= (f13 (f14 ?v0) ?v1) f1) (= ?v0 ?v1))))
(assert (forall ((?v0 S2) (?v1 S2)) (= (= (f15 (f16 ?v0) ?v1) f1) (= ?v0 ?v1))))
(assert (forall ((?v0 S4) (?v1 S4)) (= (= (f13 (f17 ?v0) ?v1) f1) (= ?v1 ?v0))))
(assert (forall ((?v0 S2) (?v1 S2)) (= (= (f15 (f18 ?v0) ?v1) f1) (= ?v1 ?v0))))
(assert (forall ((?v0 S4) (?v1 S4)) (= (f19 (f20 f21 ?v0) ?v1) ?v0)))
(assert (forall ((?v0 S4) (?v1 S2)) (= (f3 (f22 f23 ?v0) ?v1) ?v0)))
(assert (forall ((?v0 S2) (?v1 S4)) (= (f24 (f25 f26 ?v0) ?v1) ?v0)))
(assert (forall ((?v0 S2) (?v1 S2)) (= (f27 (f28 f29 ?v0) ?v1) ?v0)))
(assert (forall ((?v0 S4)) (= (= (f13 f30 ?v0) f1) false)))
(assert (forall ((?v0 S2)) (= (= (f15 f31 ?v0) f1) false)))
(assert (not (= (f32 f33 (f34 (f35 (f5 (f6 (f7 f8 (f9 f36)) (f10 f11 f36)) (f12 f36))) f37)) f1)))
(assert (= (f38 f36 f39) f1))
(assert (= (f32 f33 (f40 (f41 f4) f39)) f1))
(assert (forall ((?v0 S11)) (= (f32 ?v0 f37) f1)))
(assert (forall ((?v0 S6) (?v1 S8) (?v2 S6) (?v3 S6) (?v4 S8) (?v5 S6)) (= (= (f5 (f6 (f7 f8 ?v0) ?v1) ?v2) (f5 (f6 (f7 f8 ?v3) ?v4) ?v5)) (and (= ?v0 ?v3) (and (= ?v1 ?v4) (= ?v2 ?v5))))))
(assert (forall ((?v0 S11) (?v1 S11) (?v2 S11)) (=> (= (f32 ?v0 ?v1) f1) (=> (= (f32 ?v2 ?v0) f1) (= (f32 ?v2 ?v1) f1)))))
(assert (forall ((?v0 S11) (?v1 S4) (?v2 S11)) (let ((?v_0 (f35 ?v1))) (=> (= (f32 ?v0 (f34 ?v_0 f37)) f1) (=> (= (f32 ?v0 ?v2) f1) (= (f32 ?v0 (f34 ?v_0 ?v2)) f1))))))
(assert (forall ((?v0 S11) (?v1 S6) (?v2 S8) (?v3 S6) (?v4 S6)) (let ((?v_0 (f6 (f7 f8 ?v1) ?v2))) (=> (= (f32 ?v0 (f34 (f35 (f5 ?v_0 ?v3)) f37)) f1) (=> (forall ((?v5 S22) (?v6 S23)) (=> (= (f42 (f43 ?v3 ?v5) ?v6) f1) (= (f42 (f43 ?v4 ?v5) ?v6) f1))) (= (f32 ?v0 (f34 (f35 (f5 ?v_0 ?v4)) f37)) f1))))))
(assert (forall ((?v0 S11) (?v1 S6) (?v2 S8) (?v3 S6) (?v4 S6)) (=> (= (f32 ?v0 (f34 (f35 (f5 (f6 (f7 f8 ?v1) ?v2) ?v3)) f37)) f1) (=> (forall ((?v5 S22) (?v6 S23)) (=> (= (f42 (f43 ?v4 ?v5) ?v6) f1) (= (f42 (f43 ?v1 ?v5) ?v6) f1))) (= (f32 ?v0 (f34 (f35 (f5 (f6 (f7 f8 ?v4) ?v2) ?v3)) f37)) f1)))))
(assert (forall ((?v0 S4) (?v1 S12)) (= (f40 (f41 (f22 f23 ?v0)) ?v1) (ite (= ?v1 f44) f37 (f34 (f35 ?v0) f37)))))
(assert (forall ((?v0 S2) (?v1 S11)) (= (f45 (f46 (f25 f26 ?v0)) ?v1) (ite (= ?v1 f37) f44 (f47 (f48 ?v0) f44)))))
(assert (forall ((?v0 S2) (?v1 S12)) (= (f47 (f49 (f28 f29 ?v0)) ?v1) (ite (= ?v1 f44) f44 (f47 (f48 ?v0) f44)))))
(assert (forall ((?v0 S4) (?v1 S11)) (= (f34 (f50 (f20 f21 ?v0)) ?v1) (ite (= ?v1 f37) f37 (f34 (f35 ?v0) f37)))))
(assert (forall ((?v0 S2) (?v1 S12) (?v2 S4)) (=> (= (f38 ?v0 ?v1) f1) (= (f40 (f41 (f22 f23 ?v2)) ?v1) (f34 (f35 ?v2) f37)))))
(assert (forall ((?v0 S4) (?v1 S11) (?v2 S4)) (=> (= (f51 ?v0 ?v1) f1) (= (f34 (f50 (f20 f21 ?v2)) ?v1) (f34 (f35 ?v2) f37)))))
(assert (forall ((?v0 S2) (?v1 S12) (?v2 S2)) (=> (= (f38 ?v0 ?v1) f1) (= (f47 (f49 (f28 f29 ?v2)) ?v1) (f47 (f48 ?v2) f44)))))
(assert (forall ((?v0 S4) (?v1 S11) (?v2 S2)) (=> (= (f51 ?v0 ?v1) f1) (= (f45 (f46 (f25 f26 ?v2)) ?v1) (f47 (f48 ?v2) f44)))))
(assert (forall ((?v0 S11) (?v1 S6) (?v2 S8) (?v3 S6) (?v4 S6) (?v5 S6)) (=> (= (f32 ?v0 (f34 (f35 (f5 (f6 (f7 f8 ?v1) ?v2) ?v3)) f37)) f1) (=> (forall ((?v6 S22) (?v7 S23)) (=> (= (f42 (f43 ?v4 ?v6) ?v7) f1) (forall ((?v8 S23)) (=> (forall ((?v9 S22)) (=> (= (f42 (f43 ?v1 ?v9) ?v7) f1) (= (f42 (f43 ?v3 ?v9) ?v8) f1))) (= (f42 (f43 ?v5 ?v6) ?v8) f1))))) (= (f32 ?v0 (f34 (f35 (f5 (f6 (f7 f8 ?v4) ?v2) ?v5)) f37)) f1)))))
(assert (forall ((?v0 S4) (?v1 S3) (?v2 S2) (?v3 S12)) (=> (= ?v0 (f3 ?v1 ?v2)) (=> (= (f38 ?v2 ?v3) f1) (= (f51 ?v0 (f40 (f41 ?v1) ?v3)) f1)))))
(assert (forall ((?v0 S2) (?v1 S16) (?v2 S4) (?v3 S11)) (=> (= ?v0 (f24 ?v1 ?v2)) (=> (= (f51 ?v2 ?v3) f1) (= (f38 ?v0 (f45 (f46 ?v1) ?v3)) f1)))))
(assert (forall ((?v0 S2) (?v1 S18) (?v2 S2) (?v3 S12)) (=> (= ?v0 (f27 ?v1 ?v2)) (=> (= (f38 ?v2 ?v3) f1) (= (f38 ?v0 (f47 (f49 ?v1) ?v3)) f1)))))
(assert (forall ((?v0 S4) (?v1 S13) (?v2 S4) (?v3 S11)) (=> (= ?v0 (f19 ?v1 ?v2)) (=> (= (f51 ?v2 ?v3) f1) (= (f51 ?v0 (f34 (f50 ?v1) ?v3)) f1)))))
(assert (forall ((?v0 S4) (?v1 S4) (?v2 S11)) (=> (= (f51 ?v0 (f34 (f35 ?v1) ?v2)) f1) (=> (=> (= ?v0 ?v1) false) (=> (=> (= (f51 ?v0 ?v2) f1) false) false)))))
(assert (forall ((?v0 S2) (?v1 S2) (?v2 S12)) (=> (= (f38 ?v0 (f47 (f48 ?v1) ?v2)) f1) (=> (=> (= ?v0 ?v1) false) (=> (=> (= (f38 ?v0 ?v2) f1) false) false)))))
(assert (forall ((?v0 S4) (?v1 S11) (?v2 S4)) (=> (=> (not (= (f51 ?v0 ?v1) f1)) (= ?v0 ?v2)) (= (f51 ?v0 (f34 (f35 ?v2) ?v1)) f1))))
(assert (forall ((?v0 S2) (?v1 S12) (?v2 S2)) (=> (=> (not (= (f38 ?v0 ?v1) f1)) (= ?v0 ?v2)) (= (f38 ?v0 (f47 (f48 ?v2) ?v1)) f1))))
(assert (forall ((?v0 S2)) (=> (= (f38 ?v0 f44) f1) false)))
(assert (forall ((?v0 S4)) (=> (= (f51 ?v0 f37) f1) false)))
(assert (forall ((?v0 S27) (?v1 S6) (?v2 S8) (?v3 S6)) (= (f52 (f53 f54 ?v0) (f5 (f6 (f7 f8 ?v1) ?v2) ?v3)) (f55 f56 0))))
(assert (forall ((?v0 S4)) (= (f57 (f14 ?v0)) (f34 (f35 ?v0) f37))))
(assert (forall ((?v0 S2)) (= (f58 (f16 ?v0)) (f47 (f48 ?v0) f44))))
(assert (forall ((?v0 S4)) (= (f57 (f17 ?v0)) (f34 (f35 ?v0) f37))))
(assert (forall ((?v0 S2)) (= (f58 (f18 ?v0)) (f47 (f48 ?v0) f44))))
(assert (forall ((?v0 S12) (?v1 S2)) (=> (= ?v0 f44) (not (= (f38 ?v1 ?v0) f1)))))
(assert (forall ((?v0 S11) (?v1 S4)) (=> (= ?v0 f37) (not (= (f51 ?v1 ?v0) f1)))))
(assert (forall ((?v0 S11)) (= (= (f57 ?v0) f37) (forall ((?v1 S4)) (not (= (f13 ?v0 ?v1) f1))))))
(assert (forall ((?v0 S12)) (= (= (f58 ?v0) f44) (forall ((?v1 S2)) (not (= (f15 ?v0 ?v1) f1))))))
(assert (forall ((?v0 S2)) (= (= (f38 ?v0 f44) f1) false)))
(assert (forall ((?v0 S4)) (= (= (f51 ?v0 f37) f1) false)))
(assert (forall ((?v0 S11)) (= (= f37 (f57 ?v0)) (forall ((?v1 S4)) (not (= (f13 ?v0 ?v1) f1))))))
(assert (forall ((?v0 S12)) (= (= f44 (f58 ?v0)) (forall ((?v1 S2)) (not (= (f15 ?v0 ?v1) f1))))))
(assert (forall ((?v0 S12)) (= (forall ((?v1 S2)) (=> (= (f38 ?v1 f44) f1) (= (f15 ?v0 ?v1) f1))) true)))
(assert (forall ((?v0 S11)) (= (forall ((?v1 S4)) (=> (= (f51 ?v1 f37) f1) (= (f13 ?v0 ?v1) f1))) true)))
(assert (forall ((?v0 S12)) (= (exists ((?v1 S2)) (and (= (f38 ?v1 f44) f1) (= (f15 ?v0 ?v1) f1))) false)))
(assert (forall ((?v0 S11)) (= (exists ((?v1 S4)) (and (= (f51 ?v1 f37) f1) (= (f13 ?v0 ?v1) f1))) false)))
(assert (forall ((?v0 S12)) (= (exists ((?v1 S2)) (= (f38 ?v1 ?v0) f1)) (not (= ?v0 f44)))))
(assert (forall ((?v0 S11)) (= (exists ((?v1 S4)) (= (f51 ?v1 ?v0) f1)) (not (= ?v0 f37)))))
(assert (forall ((?v0 S12)) (= (forall ((?v1 S2)) (not (= (f38 ?v1 ?v0) f1))) (= ?v0 f44))))
(assert (forall ((?v0 S11)) (= (forall ((?v1 S4)) (not (= (f51 ?v1 ?v0) f1))) (= ?v0 f37))))
(assert (= f37 (f57 f30)))
(assert (= f44 (f58 f31)))
(assert (forall ((?v0 S4) (?v1 S11)) (=> (= (f51 ?v0 ?v1) f1) (= (f34 (f35 ?v0) ?v1) ?v1))))
(assert (forall ((?v0 S2) (?v1 S12)) (=> (= (f38 ?v0 ?v1) f1) (= (f47 (f48 ?v0) ?v1) ?v1))))
(assert (forall ((?v0 S4) (?v1 S11) (?v2 S4)) (=> (= (f51 ?v0 ?v1) f1) (= (f51 ?v0 (f34 (f35 ?v2) ?v1)) f1))))
(assert (forall ((?v0 S2) (?v1 S12) (?v2 S2)) (=> (= (f38 ?v0 ?v1) f1) (= (f38 ?v0 (f47 (f48 ?v2) ?v1)) f1))))
(assert (forall ((?v0 S4) (?v1 S11) (?v2 S11)) (let ((?v_0 (f35 ?v0))) (=> (not (= (f51 ?v0 ?v1) f1)) (=> (not (= (f51 ?v0 ?v2) f1)) (= (= (f34 ?v_0 ?v1) (f34 ?v_0 ?v2)) (= ?v1 ?v2)))))))
(assert (forall ((?v0 S2) (?v1 S12) (?v2 S12)) (let ((?v_0 (f48 ?v0))) (=> (not (= (f38 ?v0 ?v1) f1)) (=> (not (= (f38 ?v0 ?v2) f1)) (= (= (f47 ?v_0 ?v1) (f47 ?v_0 ?v2)) (= ?v1 ?v2)))))))
(assert (forall ((?v0 S4) (?v1 S11) (?v2 S4)) (= (= (f13 (f34 (f35 ?v0) ?v1) ?v2) f1) (or (= ?v0 ?v2) (= (f13 ?v1 ?v2) f1)))))
(assert (forall ((?v0 S2) (?v1 S12) (?v2 S2)) (= (= (f15 (f47 (f48 ?v0) ?v1) ?v2) f1) (or (= ?v0 ?v2) (= (f15 ?v1 ?v2) f1)))))
(assert (forall ((?v0 S4) (?v1 S4) (?v2 S11)) (= (= (f51 ?v0 (f34 (f35 ?v1) ?v2)) f1) (or (= ?v0 ?v1) (= (f51 ?v0 ?v2) f1)))))
(assert (forall ((?v0 S2) (?v1 S2) (?v2 S12)) (= (= (f38 ?v0 (f47 (f48 ?v1) ?v2)) f1) (or (= ?v0 ?v1) (= (f38 ?v0 ?v2) f1)))))
(assert (forall ((?v0 S4) (?v1 S4) (?v2 S11)) (let ((?v_1 (f35 ?v0)) (?v_0 (f35 ?v1))) (= (f34 ?v_1 (f34 ?v_0 ?v2)) (f34 ?v_0 (f34 ?v_1 ?v2))))))
(assert (forall ((?v0 S2) (?v1 S2) (?v2 S12)) (let ((?v_1 (f48 ?v0)) (?v_0 (f48 ?v1))) (= (f47 ?v_1 (f47 ?v_0 ?v2)) (f47 ?v_0 (f47 ?v_1 ?v2))))))
(assert (forall ((?v0 S4) (?v1 S11)) (let ((?v_0 (f35 ?v0))) (let ((?v_1 (f34 ?v_0 ?v1))) (= (f34 ?v_0 ?v_1) ?v_1)))))
(assert (forall ((?v0 S2) (?v1 S12)) (let ((?v_0 (f48 ?v0))) (let ((?v_1 (f47 ?v_0 ?v1))) (= (f47 ?v_0 ?v_1) ?v_1)))))
(assert (forall ((?v0 S29)) (= (f55 f56 (f59 f60 ?v0)) ?v0)))
(assert (forall ((?v0 Int)) (=> (<= 0 ?v0) (= (f59 f60 (f55 f56 ?v0)) ?v0))))
(assert (forall ((?v0 Int)) (=> (< ?v0 0) (= (f59 f60 (f55 f56 ?v0)) 0))))
(check-sat)
(exit)
