(set-info :smt-lib-version 2.6)
(set-logic UFLIA)
(set-info :source |Benchmarks from the paper: "Extending Sledgehammer with SMT Solvers" by Jasmin Blanchette, Sascha Bohme, and Lawrence C. Paulson, CADE 2011.  Translated to SMT2 by Andrew Reynolds and Morgan Deters.|)
(set-info :category "industrial")
(set-info :status unknown)
(declare-sort S1 0)
(declare-sort S2 0)
(declare-sort S3 0)
(declare-sort S4 0)
(declare-sort S5 0)
(declare-sort S6 0)
(declare-sort S7 0)
(declare-sort S8 0)
(declare-sort S9 0)
(declare-sort S10 0)
(declare-sort S11 0)
(declare-sort S12 0)
(declare-sort S13 0)
(declare-sort S14 0)
(declare-sort S15 0)
(declare-sort S16 0)
(declare-sort S17 0)
(declare-sort S18 0)
(declare-fun f1 () S1)
(declare-fun f2 () S1)
(declare-fun f3 (S3 S2) S1)
(declare-fun f4 (S2) S3)
(declare-fun f5 (S2) S3)
(declare-fun f6 (S5 S4) S6)
(declare-fun f7 (S4) S5)
(declare-fun f8 () S5)
(declare-fun f9 (S7 S3) S3)
(declare-fun f10 (S2) S7)
(declare-fun f11 (S2) S7)
(declare-fun f12 (S6 S8) S1)
(declare-fun f13 (S8) S5)
(declare-fun f14 () S3)
(declare-fun f15 (S3 S3) S1)
(declare-fun f16 () S3)
(declare-fun f17 (S2) S7)
(declare-fun f18 (S9 S5) S2)
(declare-fun f19 (S10 S11) S9)
(declare-fun f20 (S12 S5) S10)
(declare-fun f21 () S12)
(declare-fun f22 () S5)
(declare-fun f23 () S11)
(declare-fun f24 () S3)
(declare-fun f25 (S2 S3) S1)
(declare-fun f26 (S14 S2) S15)
(declare-fun f27 (S16 S13) S14)
(declare-fun f28 () S16)
(declare-fun f29 (S17 Int) S15)
(declare-fun f30 () S17)
(declare-fun f31 (S3) S3)
(declare-fun f32 (S18 S15) Int)
(declare-fun f33 () S18)
(assert (not (= f1 f2)))
(assert (forall ((?v0 S2) (?v1 S2)) (= (= (f3 (f4 ?v0) ?v1) f1) (= ?v0 ?v1))))
(assert (forall ((?v0 S2) (?v1 S2)) (= (= (f3 (f5 ?v0) ?v1) f1) (= ?v1 ?v0))))
(assert (forall ((?v0 S4) (?v1 S4)) (= (f6 (f7 ?v0) ?v1) (f6 f8 ?v0))))
(assert (forall ((?v0 S2) (?v1 S3) (?v2 S2)) (= (= (f3 (f9 (f10 ?v0) ?v1) ?v2) f1) (and (= ?v0 ?v2) (= (f3 ?v1 ?v2) f1)))))
(assert (forall ((?v0 S2) (?v1 S3) (?v2 S2)) (= (= (f3 (f9 (f11 ?v0) ?v1) ?v2) f1) (and (= ?v2 ?v0) (= (f3 ?v1 ?v2) f1)))))
(assert (forall ((?v0 S8) (?v1 S4) (?v2 S8)) (= (= (f12 (f6 (f13 ?v0) ?v1) ?v2) f1) (= ?v2 ?v0))))
(assert (forall ((?v0 S2)) (= (= (f3 f14 ?v0) f1) false)))
(assert (not (= (f15 f16 (f9 (f17 (f18 (f19 (f20 f21 f22) f23) f8)) f24)) f1)))
(assert (forall ((?v0 S4) (?v1 S8)) (=> (= (f12 (f6 f22 ?v0) ?v1) f1) (= (f15 f16 (f9 (f17 (f18 (f19 (f20 f21 (f13 ?v1)) f23) (f7 ?v0))) f24)) f1))))
(assert (forall ((?v0 S3)) (= (f15 ?v0 f24) f1)))
(assert (forall ((?v0 S5) (?v1 S11) (?v2 S5) (?v3 S5) (?v4 S11) (?v5 S5)) (= (= (f18 (f19 (f20 f21 ?v0) ?v1) ?v2) (f18 (f19 (f20 f21 ?v3) ?v4) ?v5)) (and (= ?v0 ?v3) (and (= ?v1 ?v4) (= ?v2 ?v5))))))
(assert (forall ((?v0 S3) (?v1 S3) (?v2 S3)) (=> (= (f15 ?v0 ?v1) f1) (=> (= (f15 ?v2 ?v0) f1) (= (f15 ?v2 ?v1) f1)))))
(assert (forall ((?v0 S3) (?v1 S2) (?v2 S3)) (let ((?v_0 (f17 ?v1))) (=> (= (f15 ?v0 (f9 ?v_0 f24)) f1) (=> (= (f15 ?v0 ?v2) f1) (= (f15 ?v0 (f9 ?v_0 ?v2)) f1))))))
(assert (forall ((?v0 S3) (?v1 S5) (?v2 S11) (?v3 S5) (?v4 S5)) (let ((?v_0 (f19 (f20 f21 ?v1) ?v2))) (=> (= (f15 ?v0 (f9 (f17 (f18 ?v_0 ?v3)) f24)) f1) (=> (forall ((?v5 S4) (?v6 S8)) (=> (= (f12 (f6 ?v3 ?v5) ?v6) f1) (= (f12 (f6 ?v4 ?v5) ?v6) f1))) (= (f15 ?v0 (f9 (f17 (f18 ?v_0 ?v4)) f24)) f1))))))
(assert (forall ((?v0 S3) (?v1 S5) (?v2 S11) (?v3 S5) (?v4 S5)) (=> (= (f15 ?v0 (f9 (f17 (f18 (f19 (f20 f21 ?v1) ?v2) ?v3)) f24)) f1) (=> (forall ((?v5 S4) (?v6 S8)) (=> (= (f12 (f6 ?v4 ?v5) ?v6) f1) (= (f12 (f6 ?v1 ?v5) ?v6) f1))) (= (f15 ?v0 (f9 (f17 (f18 (f19 (f20 f21 ?v4) ?v2) ?v3)) f24)) f1)))))
(assert (forall ((?v0 S3) (?v1 S5) (?v2 S11) (?v3 S5) (?v4 S5) (?v5 S5)) (=> (= (f15 ?v0 (f9 (f17 (f18 (f19 (f20 f21 ?v1) ?v2) ?v3)) f24)) f1) (=> (forall ((?v6 S4) (?v7 S8)) (=> (= (f12 (f6 ?v4 ?v6) ?v7) f1) (forall ((?v8 S8)) (=> (forall ((?v9 S4)) (=> (= (f12 (f6 ?v1 ?v9) ?v7) f1) (= (f12 (f6 ?v3 ?v9) ?v8) f1))) (= (f12 (f6 ?v5 ?v6) ?v8) f1))))) (= (f15 ?v0 (f9 (f17 (f18 (f19 (f20 f21 ?v4) ?v2) ?v5)) f24)) f1)))))
(assert (forall ((?v0 S2) (?v1 S2) (?v2 S3)) (=> (= (f25 ?v0 (f9 (f17 ?v1) ?v2)) f1) (=> (=> (= ?v0 ?v1) false) (=> (=> (= (f25 ?v0 ?v2) f1) false) false)))))
(assert (forall ((?v0 S2) (?v1 S3) (?v2 S2)) (=> (=> (not (= (f25 ?v0 ?v1) f1)) (= ?v0 ?v2)) (= (f25 ?v0 (f9 (f17 ?v2) ?v1)) f1))))
(assert (forall ((?v0 S2)) (=> (= (f25 ?v0 f24) f1) false)))
(assert (forall ((?v0 S13) (?v1 S5) (?v2 S11) (?v3 S5)) (= (f26 (f27 f28 ?v0) (f18 (f19 (f20 f21 ?v1) ?v2) ?v3)) (f29 f30 0))))
(assert (forall ((?v0 S2)) (= (f31 (f4 ?v0)) (f9 (f17 ?v0) f24))))
(assert (forall ((?v0 S2)) (= (f31 (f5 ?v0)) (f9 (f17 ?v0) f24))))
(assert (forall ((?v0 S2) (?v1 S3)) (= (f31 (f9 (f10 ?v0) ?v1)) (ite (= (f3 ?v1 ?v0) f1) (f9 (f17 ?v0) f24) f24))))
(assert (forall ((?v0 S2) (?v1 S3)) (= (f31 (f9 (f11 ?v0) ?v1)) (ite (= (f3 ?v1 ?v0) f1) (f9 (f17 ?v0) f24) f24))))
(assert (forall ((?v0 S3) (?v1 S2)) (=> (= ?v0 f24) (not (= (f25 ?v1 ?v0) f1)))))
(assert (forall ((?v0 S3)) (= (= (f31 ?v0) f24) (forall ((?v1 S2)) (not (= (f3 ?v0 ?v1) f1))))))
(assert (forall ((?v0 S2)) (= (= (f25 ?v0 f24) f1) false)))
(assert (forall ((?v0 S3)) (= (= f24 (f31 ?v0)) (forall ((?v1 S2)) (not (= (f3 ?v0 ?v1) f1))))))
(assert (forall ((?v0 S3)) (= (forall ((?v1 S2)) (=> (= (f25 ?v1 f24) f1) (= (f3 ?v0 ?v1) f1))) true)))
(assert (forall ((?v0 S3)) (= (exists ((?v1 S2)) (and (= (f25 ?v1 f24) f1) (= (f3 ?v0 ?v1) f1))) false)))
(assert (forall ((?v0 S3)) (= (exists ((?v1 S2)) (= (f25 ?v1 ?v0) f1)) (not (= ?v0 f24)))))
(assert (forall ((?v0 S3)) (= (forall ((?v1 S2)) (not (= (f25 ?v1 ?v0) f1))) (= ?v0 f24))))
(assert (= f24 (f31 f14)))
(assert (forall ((?v0 S2) (?v1 S3)) (=> (= (f25 ?v0 ?v1) f1) (= (f9 (f17 ?v0) ?v1) ?v1))))
(assert (forall ((?v0 S2) (?v1 S3) (?v2 S2)) (=> (= (f25 ?v0 ?v1) f1) (= (f25 ?v0 (f9 (f17 ?v2) ?v1)) f1))))
(assert (forall ((?v0 S2) (?v1 S3) (?v2 S3)) (let ((?v_0 (f17 ?v0))) (=> (not (= (f25 ?v0 ?v1) f1)) (=> (not (= (f25 ?v0 ?v2) f1)) (= (= (f9 ?v_0 ?v1) (f9 ?v_0 ?v2)) (= ?v1 ?v2)))))))
(assert (forall ((?v0 S2) (?v1 S3) (?v2 S2)) (= (= (f3 (f9 (f17 ?v0) ?v1) ?v2) f1) (or (= ?v0 ?v2) (= (f3 ?v1 ?v2) f1)))))
(assert (forall ((?v0 S2) (?v1 S2) (?v2 S3)) (= (= (f25 ?v0 (f9 (f17 ?v1) ?v2)) f1) (or (= ?v0 ?v1) (= (f25 ?v0 ?v2) f1)))))
(assert (forall ((?v0 S2) (?v1 S2) (?v2 S3)) (let ((?v_1 (f17 ?v0)) (?v_0 (f17 ?v1))) (= (f9 ?v_1 (f9 ?v_0 ?v2)) (f9 ?v_0 (f9 ?v_1 ?v2))))))
(assert (forall ((?v0 S2) (?v1 S3)) (let ((?v_0 (f17 ?v0))) (let ((?v_1 (f9 ?v_0 ?v1))) (= (f9 ?v_0 ?v_1) ?v_1)))))
(assert (forall ((?v0 S15)) (= (f29 f30 (f32 f33 ?v0)) ?v0)))
(assert (forall ((?v0 Int)) (=> (<= 0 ?v0) (= (f32 f33 (f29 f30 ?v0)) ?v0))))
(assert (forall ((?v0 Int)) (=> (< ?v0 0) (= (f32 f33 (f29 f30 ?v0)) 0))))
(check-sat)
(exit)
