(set-info :smt-lib-version 2.6)
(set-logic UFLIA)
(set-info :source |Benchmarks from the paper: "Extending Sledgehammer with SMT Solvers" by Jasmin Blanchette, Sascha Bohme, and Lawrence C. Paulson, CADE 2011.  Translated to SMT2 by Andrew Reynolds and Morgan Deters.|)
(set-info :category "industrial")
(set-info :status unknown)
(declare-sort S1 0)
(declare-sort S2 0)
(declare-sort S3 0)
(declare-sort S4 0)
(declare-sort S5 0)
(declare-sort S6 0)
(declare-sort S7 0)
(declare-sort S8 0)
(declare-sort S9 0)
(declare-sort S10 0)
(declare-sort S11 0)
(declare-sort S12 0)
(declare-sort S13 0)
(declare-sort S14 0)
(declare-sort S15 0)
(declare-sort S16 0)
(declare-sort S17 0)
(declare-sort S18 0)
(declare-sort S19 0)
(declare-sort S20 0)
(declare-sort S21 0)
(declare-sort S22 0)
(declare-sort S23 0)
(declare-sort S24 0)
(declare-sort S25 0)
(declare-sort S26 0)
(declare-sort S27 0)
(declare-sort S28 0)
(declare-sort S29 0)
(declare-sort S30 0)
(declare-sort S31 0)
(declare-sort S32 0)
(declare-fun f1 () S1)
(declare-fun f2 () S1)
(declare-fun f3 (S4 S3) S1)
(declare-fun f4 (S5 S2) S4)
(declare-fun f5 () S5)
(declare-fun f6 () S5)
(declare-fun f7 () S4)
(declare-fun f8 (S6 S7) S1)
(declare-fun f9 (S8 S6) S6)
(declare-fun f10 () S8)
(declare-fun f11 (S9 S7) S8)
(declare-fun f12 () S9)
(declare-fun f13 () S6)
(declare-fun f14 (S10 S7) S6)
(declare-fun f15 () S10)
(declare-fun f16 () S10)
(declare-fun f17 () S9)
(declare-fun f18 (S11 S6) S1)
(declare-fun f19 (S12 S7) S11)
(declare-fun f20 () S12)
(declare-fun f21 () S9)
(declare-fun f22 () S9)
(declare-fun f23 () S9)
(declare-fun f24 (S13 S3) S5)
(declare-fun f25 () S13)
(declare-fun f26 (S14 S2) S5)
(declare-fun f27 (S15 S5) S14)
(declare-fun f28 () S15)
(declare-fun f29 (S16 S5) S5)
(declare-fun f30 (S17 S1) S16)
(declare-fun f31 () S17)
(declare-fun f32 () S6)
(declare-fun f33 (S18 S6) S11)
(declare-fun f34 () S18)
(declare-fun f35 () S6)
(declare-fun f36 (S19 S5) S7)
(declare-fun f37 (S20 S21) S19)
(declare-fun f38 (S22 S5) S20)
(declare-fun f39 () S22)
(declare-fun f40 (S23 S21) S21)
(declare-fun f41 (S24 S4) S23)
(declare-fun f42 () S24)
(declare-fun f43 () S21)
(declare-fun f44 (S26 S7) S27)
(declare-fun f45 (S28 S25) S26)
(declare-fun f46 () S28)
(declare-fun f47 (S29 Int) S27)
(declare-fun f48 () S29)
(declare-fun f49 () S8)
(declare-fun f50 (S30 S6) S7)
(declare-fun f51 () S30)
(declare-fun f52 () S1)
(declare-fun f53 () S21)
(declare-fun f54 (S31 S21) S23)
(declare-fun f55 () S31)
(declare-fun f56 () S26)
(declare-fun f57 () S30)
(declare-fun f58 (S32 S27) Int)
(declare-fun f59 () S32)
(assert (not (= f1 f2)))
(assert (forall ((?v0 S2) (?v1 S3)) (= (= (f3 (f4 f5 ?v0) ?v1) f1) (and (= (f3 (f4 f6 ?v0) ?v1) f1) (not (= (f3 f7 ?v1) f1))))))
(assert (forall ((?v0 S6) (?v1 S7)) (= (= (f8 (f9 f10 ?v0) ?v1) f1) (= ?v0 (f9 (f11 f12 ?v1) f13)))))
(assert (forall ((?v0 S7) (?v1 S7)) (= (= (f8 (f14 f15 ?v0) ?v1) f1) (= ?v0 ?v1))))
(assert (forall ((?v0 S7) (?v1 S7)) (= (= (f8 (f14 f16 ?v0) ?v1) f1) (= ?v1 ?v0))))
(assert (forall ((?v0 S7) (?v1 S6) (?v2 S7)) (= (= (f8 (f9 (f11 f17 ?v0) ?v1) ?v2) f1) (or (= ?v2 ?v0) (= (f18 (f19 f20 ?v2) ?v1) f1)))))
(assert (forall ((?v0 S7) (?v1 S6) (?v2 S7)) (= (= (f8 (f9 (f11 f21 ?v0) ?v1) ?v2) f1) (and (= ?v0 ?v2) (= (f8 ?v1 ?v2) f1)))))
(assert (forall ((?v0 S7) (?v1 S6) (?v2 S7)) (= (= (f8 (f9 (f11 f22 ?v0) ?v1) ?v2) f1) (and (= ?v2 ?v0) (= (f8 ?v1 ?v2) f1)))))
(assert (forall ((?v0 S7) (?v1 S6) (?v2 S7)) (= (= (f8 (f9 (f11 f23 ?v0) ?v1) ?v2) f1) (=> (not (= ?v2 ?v0)) (= (f8 ?v1 ?v2) f1)))))
(assert (forall ((?v0 S3) (?v1 S2) (?v2 S3)) (= (= (f3 (f4 (f24 f25 ?v0) ?v1) ?v2) f1) (= ?v2 ?v0))))
(assert (forall ((?v0 S5) (?v1 S2) (?v2 S2)) (= (f4 (f26 (f27 f28 ?v0) ?v1) ?v2) (f4 ?v0 ?v1))))
(assert (forall ((?v0 S1) (?v1 S5) (?v2 S2) (?v3 S3)) (= (= (f3 (f4 (f29 (f30 f31 ?v0) ?v1) ?v2) ?v3) f1) (and (= (f3 (f4 ?v1 ?v2) ?v3) f1) (= ?v0 f1)))))
(assert (forall ((?v0 S7)) (= (= (f8 f32 ?v0) f1) false)))
(assert (not (= (f18 (f33 f34 f35) (f9 (f11 f12 (f36 (f37 (f38 f39 f5) (f40 (f41 f42 f7) f43)) f6)) f13)) f1)))
(assert (forall ((?v0 S6)) (= (f18 (f33 f34 ?v0) f13) f1)))
(assert (forall ((?v0 S5) (?v1 S21) (?v2 S5) (?v3 S5) (?v4 S21) (?v5 S5)) (= (= (f36 (f37 (f38 f39 ?v0) ?v1) ?v2) (f36 (f37 (f38 f39 ?v3) ?v4) ?v5)) (and (= ?v0 ?v3) (and (= ?v1 ?v4) (= ?v2 ?v5))))))
(assert (forall ((?v0 S6) (?v1 S6) (?v2 S6)) (let ((?v_0 (f33 f34 ?v2))) (=> (= (f18 (f33 f34 ?v0) ?v1) f1) (=> (= (f18 ?v_0 ?v0) f1) (= (f18 ?v_0 ?v1) f1))))))
(assert (forall ((?v0 S6) (?v1 S7) (?v2 S6)) (let ((?v_0 (f33 f34 ?v0)) (?v_1 (f11 f12 ?v1))) (=> (= (f18 ?v_0 (f9 ?v_1 f13)) f1) (=> (= (f18 ?v_0 ?v2) f1) (= (f18 ?v_0 (f9 ?v_1 ?v2)) f1))))))
(assert (forall ((?v0 S1) (?v1 S6) (?v2 S5) (?v3 S21) (?v4 S5)) (let ((?v_0 (f33 f34 ?v1))) (=> (=> (= ?v0 f1) (= (f18 ?v_0 (f9 (f11 f12 (f36 (f37 (f38 f39 ?v2) ?v3) ?v4)) f13)) f1)) (= (f18 ?v_0 (f9 (f11 f12 (f36 (f37 (f38 f39 (f29 (f30 f31 ?v0) ?v2)) ?v3) ?v4)) f13)) f1)))))
(assert (forall ((?v0 S5) (?v1 S6) (?v2 S21) (?v3 S5)) (=> (forall ((?v4 S2) (?v5 S3)) (=> (= (f3 (f4 ?v0 ?v4) ?v5) f1) (= (f18 (f33 f34 ?v1) (f9 (f11 f12 (f36 (f37 (f38 f39 (f24 f25 ?v5)) ?v2) (f26 (f27 f28 ?v3) ?v4))) f13)) f1))) (= (f18 (f33 f34 ?v1) (f9 (f11 f12 (f36 (f37 (f38 f39 ?v0) ?v2) ?v3)) f13)) f1))))
(assert (forall ((?v0 S6) (?v1 S5) (?v2 S21) (?v3 S5) (?v4 S5)) (let ((?v_0 (f33 f34 ?v0)) (?v_1 (f37 (f38 f39 ?v1) ?v2))) (=> (= (f18 ?v_0 (f9 (f11 f12 (f36 ?v_1 ?v3)) f13)) f1) (=> (forall ((?v5 S2) (?v6 S3)) (=> (= (f3 (f4 ?v3 ?v5) ?v6) f1) (= (f3 (f4 ?v4 ?v5) ?v6) f1))) (= (f18 ?v_0 (f9 (f11 f12 (f36 ?v_1 ?v4)) f13)) f1))))))
(assert (forall ((?v0 S6) (?v1 S5) (?v2 S21) (?v3 S5) (?v4 S5)) (let ((?v_0 (f33 f34 ?v0))) (=> (= (f18 ?v_0 (f9 (f11 f12 (f36 (f37 (f38 f39 ?v1) ?v2) ?v3)) f13)) f1) (=> (forall ((?v5 S2) (?v6 S3)) (=> (= (f3 (f4 ?v4 ?v5) ?v6) f1) (= (f3 (f4 ?v1 ?v5) ?v6) f1))) (= (f18 ?v_0 (f9 (f11 f12 (f36 (f37 (f38 f39 ?v4) ?v2) ?v3)) f13)) f1))))))
(assert (forall ((?v0 S6) (?v1 S5) (?v2 S21) (?v3 S5) (?v4 S5) (?v5 S5)) (let ((?v_0 (f33 f34 ?v0))) (=> (= (f18 ?v_0 (f9 (f11 f12 (f36 (f37 (f38 f39 ?v1) ?v2) ?v3)) f13)) f1) (=> (forall ((?v6 S2) (?v7 S3)) (=> (= (f3 (f4 ?v4 ?v6) ?v7) f1) (forall ((?v8 S3)) (=> (forall ((?v9 S2)) (=> (= (f3 (f4 ?v1 ?v9) ?v7) f1) (= (f3 (f4 ?v3 ?v9) ?v8) f1))) (= (f3 (f4 ?v5 ?v6) ?v8) f1))))) (= (f18 ?v_0 (f9 (f11 f12 (f36 (f37 (f38 f39 ?v4) ?v2) ?v5)) f13)) f1))))))
(assert (forall ((?v0 S7) (?v1 S7) (?v2 S6)) (let ((?v_0 (f19 f20 ?v0))) (=> (= (f18 ?v_0 (f9 (f11 f12 ?v1) ?v2)) f1) (=> (=> (= ?v0 ?v1) false) (=> (=> (= (f18 ?v_0 ?v2) f1) false) false))))))
(assert (forall ((?v0 S7) (?v1 S6) (?v2 S7)) (let ((?v_0 (f19 f20 ?v0))) (=> (=> (not (= (f18 ?v_0 ?v1) f1)) (= ?v0 ?v2)) (= (f18 ?v_0 (f9 (f11 f12 ?v2) ?v1)) f1)))))
(assert (forall ((?v0 S7)) (=> (= (f18 (f19 f20 ?v0) f13) f1) false)))
(assert (forall ((?v0 S25) (?v1 S5) (?v2 S21) (?v3 S5)) (= (f44 (f45 f46 ?v0) (f36 (f37 (f38 f39 ?v1) ?v2) ?v3)) (f47 f48 0))))
(assert (forall ((?v0 S7)) (= (f9 f49 (f14 f15 ?v0)) (f9 (f11 f12 ?v0) f13))))
(assert (forall ((?v0 S7)) (= (f9 f49 (f14 f16 ?v0)) (f9 (f11 f12 ?v0) f13))))
(assert (forall ((?v0 S7) (?v1 S6)) (= (f9 f49 (f9 (f11 f21 ?v0) ?v1)) (ite (= (f8 ?v1 ?v0) f1) (f9 (f11 f12 ?v0) f13) f13))))
(assert (forall ((?v0 S7) (?v1 S6)) (= (f9 f49 (f9 (f11 f22 ?v0) ?v1)) (ite (= (f8 ?v1 ?v0) f1) (f9 (f11 f12 ?v0) f13) f13))))
(assert (forall ((?v0 S6) (?v1 S7)) (=> (= ?v0 f13) (not (= (f18 (f19 f20 ?v1) ?v0) f1)))))
(assert (forall ((?v0 S6)) (= (= (f9 f49 ?v0) f13) (forall ((?v1 S7)) (not (= (f8 ?v0 ?v1) f1))))))
(assert (forall ((?v0 S7)) (= (= (f18 (f19 f20 ?v0) f13) f1) false)))
(assert (forall ((?v0 S6)) (= (= f13 (f9 f49 ?v0)) (forall ((?v1 S7)) (not (= (f8 ?v0 ?v1) f1))))))
(assert (forall ((?v0 S6)) (= (forall ((?v1 S7)) (=> (= (f18 (f19 f20 ?v1) f13) f1) (= (f8 ?v0 ?v1) f1))) true)))
(assert (forall ((?v0 S6)) (= (exists ((?v1 S7)) (and (= (f18 (f19 f20 ?v1) f13) f1) (= (f8 ?v0 ?v1) f1))) false)))
(assert (forall ((?v0 S6)) (= (exists ((?v1 S7)) (= (f18 (f19 f20 ?v1) ?v0) f1)) (not (= ?v0 f13)))))
(assert (forall ((?v0 S6)) (= (forall ((?v1 S7)) (not (= (f18 (f19 f20 ?v1) ?v0) f1))) (= ?v0 f13))))
(assert (= f13 (f9 f49 f32)))
(assert (forall ((?v0 S7) (?v1 S6)) (=> (= (f18 (f19 f20 ?v0) ?v1) f1) (= (f9 (f11 f12 ?v0) ?v1) ?v1))))
(assert (forall ((?v0 S7) (?v1 S6) (?v2 S7)) (let ((?v_0 (f19 f20 ?v0))) (=> (= (f18 ?v_0 ?v1) f1) (= (f18 ?v_0 (f9 (f11 f12 ?v2) ?v1)) f1)))))
(assert (forall ((?v0 S7) (?v1 S6) (?v2 S6)) (let ((?v_0 (f19 f20 ?v0)) (?v_1 (f11 f12 ?v0))) (=> (not (= (f18 ?v_0 ?v1) f1)) (=> (not (= (f18 ?v_0 ?v2) f1)) (= (= (f9 ?v_1 ?v1) (f9 ?v_1 ?v2)) (= ?v1 ?v2)))))))
(assert (forall ((?v0 S7) (?v1 S6) (?v2 S7)) (= (= (f8 (f9 (f11 f12 ?v0) ?v1) ?v2) f1) (or (= ?v0 ?v2) (= (f8 ?v1 ?v2) f1)))))
(assert (forall ((?v0 S7) (?v1 S7) (?v2 S6)) (let ((?v_0 (f19 f20 ?v0))) (= (= (f18 ?v_0 (f9 (f11 f12 ?v1) ?v2)) f1) (or (= ?v0 ?v1) (= (f18 ?v_0 ?v2) f1))))))
(assert (forall ((?v0 S7) (?v1 S7) (?v2 S6)) (let ((?v_1 (f11 f12 ?v0)) (?v_0 (f11 f12 ?v1))) (= (f9 ?v_1 (f9 ?v_0 ?v2)) (f9 ?v_0 (f9 ?v_1 ?v2))))))
(assert (forall ((?v0 S7) (?v1 S6)) (let ((?v_0 (f11 f12 ?v0))) (let ((?v_1 (f9 ?v_0 ?v1))) (= (f9 ?v_0 ?v_1) ?v_1)))))
(assert (forall ((?v0 S7) (?v1 S6)) (= (f9 (f11 f12 ?v0) (f9 f49 ?v1)) (f9 f49 (f9 (f11 f23 ?v0) ?v1)))))
(assert (forall ((?v0 S7) (?v1 S6)) (= (f9 (f11 f12 ?v0) ?v1) (f9 f49 (f9 (f11 f17 ?v0) ?v1)))))
(assert (forall ((?v0 S7) (?v1 S6)) (= (f18 (f19 f20 ?v0) (f9 (f11 f12 ?v0) ?v1)) f1)))
(assert (forall ((?v0 S7) (?v1 S6)) (= (f9 (f11 f12 ?v0) ?v1) (f9 f49 (f9 (f11 f17 ?v0) ?v1)))))
(assert (forall ((?v0 S7) (?v1 S7)) (=> (= (f9 (f11 f12 ?v0) f13) (f9 (f11 f12 ?v1) f13)) (= ?v0 ?v1))))
(assert (forall ((?v0 S7) (?v1 S7)) (=> (= (f18 (f19 f20 ?v0) (f9 (f11 f12 ?v1) f13)) f1) (=> (=> (= ?v0 ?v1) false) false))))
(assert (forall ((?v0 S7) (?v1 S7) (?v2 S7) (?v3 S7)) (= (= (f9 (f11 f12 ?v0) (f9 (f11 f12 ?v1) f13)) (f9 (f11 f12 ?v2) (f9 (f11 f12 ?v3) f13))) (or (and (= ?v0 ?v2) (= ?v1 ?v3)) (and (= ?v0 ?v3) (= ?v1 ?v2))))))
(assert (forall ((?v0 S7) (?v1 S7)) (= (= (f18 (f19 f20 ?v0) (f9 (f11 f12 ?v1) f13)) f1) (= ?v0 ?v1))))
(assert (forall ((?v0 S7) (?v1 S6)) (not (= (f9 (f11 f12 ?v0) ?v1) f13))))
(assert (forall ((?v0 S7) (?v1 S6)) (not (= f13 (f9 (f11 f12 ?v0) ?v1)))))
(assert (forall ((?v0 S7)) (= (f50 f51 (f9 (f11 f12 ?v0) f13)) ?v0)))
(assert (forall ((?v0 S7)) (= (= (f8 f13 ?v0) f1) (= f52 f1))))
(assert (forall ((?v0 S7)) (= (= (f8 f13 ?v0) f1) (= f52 f1))))
(assert (forall ((?v0 S6) (?v1 S5)) (= (f18 (f33 f34 ?v0) (f9 (f11 f12 (f36 (f37 (f38 f39 ?v1) f53) ?v1)) f13)) f1)))
(assert (forall ((?v0 S6) (?v1 S5) (?v2 S21) (?v3 S5) (?v4 S21) (?v5 S5)) (let ((?v_0 (f33 f34 ?v0)) (?v_1 (f38 f39 ?v1))) (=> (= (f18 ?v_0 (f9 (f11 f12 (f36 (f37 ?v_1 ?v2) ?v3)) f13)) f1) (=> (= (f18 ?v_0 (f9 (f11 f12 (f36 (f37 (f38 f39 ?v3) ?v4) ?v5)) f13)) f1) (= (f18 ?v_0 (f9 (f11 f12 (f36 (f37 ?v_1 (f40 (f54 f55 ?v2) ?v4)) ?v5)) f13)) f1))))))
(assert (forall ((?v0 S5) (?v1 S21) (?v2 S5)) (= (f44 f56 (f36 (f37 (f38 f39 ?v0) ?v1) ?v2)) (f47 f48 0))))
(assert (forall ((?v0 S7)) (=> (forall ((?v1 S5) (?v2 S21) (?v3 S5)) (=> (= ?v0 (f36 (f37 (f38 f39 ?v1) ?v2) ?v3)) false)) false)))
(assert (forall ((?v0 S7) (?v1 S6)) (=> (= (f18 (f19 f20 ?v0) ?v1) f1) (=> (forall ((?v2 S6)) (=> (= ?v1 (f9 (f11 f12 ?v0) ?v2)) (=> (not (= (f18 (f19 f20 ?v0) ?v2) f1)) false))) false))))
(assert (forall ((?v0 S21) (?v1 S21)) (not (= (f40 (f54 f55 ?v0) ?v1) f53))))
(assert (forall ((?v0 S21) (?v1 S21)) (not (= f53 (f40 (f54 f55 ?v0) ?v1)))))
(assert (forall ((?v0 S4) (?v1 S21)) (not (= f53 (f40 (f41 f42 ?v0) ?v1)))))
(assert (forall ((?v0 S4) (?v1 S21)) (not (= (f40 (f41 f42 ?v0) ?v1) f53))))
(assert (forall ((?v0 S21) (?v1 S21) (?v2 S4) (?v3 S21)) (not (= (f40 (f54 f55 ?v0) ?v1) (f40 (f41 f42 ?v2) ?v3)))))
(assert (forall ((?v0 S4) (?v1 S21) (?v2 S21) (?v3 S21)) (not (= (f40 (f41 f42 ?v0) ?v1) (f40 (f54 f55 ?v2) ?v3)))))
(assert (forall ((?v0 S6)) (= (f50 f51 ?v0) (f50 f57 (f9 f10 ?v0)))))
(assert (forall ((?v0 S4) (?v1 S21) (?v2 S4) (?v3 S21)) (= (= (f40 (f41 f42 ?v0) ?v1) (f40 (f41 f42 ?v2) ?v3)) (and (= ?v0 ?v2) (= ?v1 ?v3)))))
(assert (forall ((?v0 S21) (?v1 S21) (?v2 S21) (?v3 S21)) (= (= (f40 (f54 f55 ?v0) ?v1) (f40 (f54 f55 ?v2) ?v3)) (and (= ?v0 ?v2) (= ?v1 ?v3)))))
(assert (forall ((?v0 S7)) (= (f50 f57 (f14 f15 ?v0)) ?v0)))
(assert (forall ((?v0 S27)) (= (f47 f48 (f58 f59 ?v0)) ?v0)))
(assert (forall ((?v0 Int)) (=> (<= 0 ?v0) (= (f58 f59 (f47 f48 ?v0)) ?v0))))
(assert (forall ((?v0 Int)) (=> (< ?v0 0) (= (f58 f59 (f47 f48 ?v0)) 0))))
(check-sat)
(exit)
