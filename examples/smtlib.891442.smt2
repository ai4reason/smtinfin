(set-info :smt-lib-version 2.6)
(set-logic UFLIA)
(set-info :source |Benchmarks from the paper: "Extending Sledgehammer with SMT Solvers" by Jasmin Blanchette, Sascha Bohme, and Lawrence C. Paulson, CADE 2011.  Translated to SMT2 by Andrew Reynolds and Morgan Deters.|)
(set-info :category "industrial")
(set-info :status unknown)
(declare-sort S1 0)
(declare-sort S2 0)
(declare-sort S3 0)
(declare-sort S4 0)
(declare-sort S5 0)
(declare-sort S6 0)
(declare-sort S7 0)
(declare-sort S8 0)
(declare-sort S9 0)
(declare-sort S10 0)
(declare-sort S11 0)
(declare-sort S12 0)
(declare-sort S13 0)
(declare-sort S14 0)
(declare-sort S15 0)
(declare-sort S16 0)
(declare-sort S17 0)
(declare-sort S18 0)
(declare-sort S19 0)
(declare-sort S20 0)
(declare-sort S21 0)
(declare-sort S22 0)
(declare-sort S23 0)
(declare-sort S24 0)
(declare-sort S25 0)
(declare-sort S26 0)
(declare-sort S27 0)
(declare-fun f1 () S1)
(declare-fun f2 () S1)
(declare-fun f3 (S3 S2) S1)
(declare-fun f4 (S4 S2) S3)
(declare-fun f5 () S4)
(declare-fun f6 () S4)
(declare-fun f7 (S5 S6) S4)
(declare-fun f8 () S5)
(declare-fun f9 () S6)
(declare-fun f10 (S7 S2) S4)
(declare-fun f11 () S7)
(declare-fun f12 (S8 S4) S7)
(declare-fun f13 () S8)
(declare-fun f14 () S5)
(declare-fun f15 (S9 S4) S4)
(declare-fun f16 (S10 S1) S9)
(declare-fun f17 () S10)
(declare-fun f18 (S12 S11) S1)
(declare-fun f19 () S12)
(declare-fun f20 (S13 S12) S1)
(declare-fun f21 (S14 S12) S13)
(declare-fun f22 () S14)
(declare-fun f23 () S12)
(declare-fun f24 (S15 S12) S12)
(declare-fun f25 (S16 S11) S15)
(declare-fun f26 () S16)
(declare-fun f27 (S17 S4) S11)
(declare-fun f28 (S18 S6) S17)
(declare-fun f29 (S19 S4) S18)
(declare-fun f30 () S19)
(declare-fun f31 () S12)
(declare-fun f32 () S1)
(declare-fun f33 (S20 S6) S11)
(declare-fun f34 () S20)
(declare-fun f35 (S21 S11) S13)
(declare-fun f36 () S21)
(declare-fun f37 (S23 S11) S24)
(declare-fun f38 (S25 S22) S23)
(declare-fun f39 () S25)
(declare-fun f40 (S26 Int) S24)
(declare-fun f41 () S26)
(declare-fun f42 () S15)
(declare-fun f43 (S27 S24) Int)
(declare-fun f44 () S27)
(assert (not (= f1 f2)))
(assert (forall ((?v0 S2) (?v1 S2)) (= (= (f3 (f4 f5 ?v0) ?v1) f1) (= ?v0 ?v1))))
(assert (forall ((?v0 S2) (?v1 S2)) (= (= (f3 (f4 f6 ?v0) ?v1) f1) (forall ((?v2 S2)) (=> (= (f3 (f4 (f7 f8 f9) ?v1) ?v2) f1) (= ?v0 ?v2))))))
(assert (forall ((?v0 S2) (?v1 S2) (?v2 S2)) (= (= (f3 (f4 (f10 f11 ?v0) ?v1) ?v2) f1) (= ?v2 ?v0))))
(assert (forall ((?v0 S4) (?v1 S2) (?v2 S2)) (= (f4 (f10 (f12 f13 ?v0) ?v1) ?v2) (f4 ?v0 ?v1))))
(assert (forall ((?v0 S6) (?v1 S2) (?v2 S2)) (= (= (f3 (f4 (f7 f14 ?v0) ?v1) ?v2) f1) (forall ((?v3 S2)) (=> (= (f3 (f4 (f7 f8 ?v0) ?v2) ?v3) f1) (= ?v1 ?v3))))))
(assert (forall ((?v0 S1) (?v1 S4) (?v2 S2) (?v3 S2)) (= (= (f3 (f4 (f15 (f16 f17 ?v0) ?v1) ?v2) ?v3) f1) (and (= (f3 (f4 ?v1 ?v2) ?v3) f1) (= ?v0 f1)))))
(assert (forall ((?v0 S11)) (= (= (f18 f19 ?v0) f1) false)))
(assert (not (= (f20 (f21 f22 f23) (f24 (f25 f26 (f27 (f28 (f29 f30 f5) f9) (f7 f8 f9))) f31)) f1)))
(assert (= f32 f1))
(assert (= (f20 (f21 f22 f23) (f24 (f25 f26 (f27 (f28 (f29 f30 f6) f9) f5)) f31)) f1))
(assert (forall ((?v0 S12)) (= (f20 (f21 f22 ?v0) f31) f1)))
(assert (forall ((?v0 S4) (?v1 S6) (?v2 S4) (?v3 S4) (?v4 S6) (?v5 S4)) (= (= (f27 (f28 (f29 f30 ?v0) ?v1) ?v2) (f27 (f28 (f29 f30 ?v3) ?v4) ?v5)) (and (= ?v0 ?v3) (and (= ?v1 ?v4) (= ?v2 ?v5))))))
(assert (forall ((?v0 S12) (?v1 S12) (?v2 S12)) (let ((?v_0 (f21 f22 ?v2))) (=> (= (f20 (f21 f22 ?v0) ?v1) f1) (=> (= (f20 ?v_0 ?v0) f1) (= (f20 ?v_0 ?v1) f1))))))
(assert (forall ((?v0 S12) (?v1 S11) (?v2 S12)) (let ((?v_0 (f21 f22 ?v0)) (?v_1 (f25 f26 ?v1))) (=> (= (f20 ?v_0 (f24 ?v_1 f31)) f1) (=> (= (f20 ?v_0 ?v2) f1) (= (f20 ?v_0 (f24 ?v_1 ?v2)) f1))))))
(assert (forall ((?v0 S12) (?v1 S11) (?v2 S12)) (let ((?v_0 (f21 f22 ?v0)) (?v_1 (f25 f26 ?v1))) (=> (= (f20 ?v_0 (f24 ?v_1 ?v2)) f1) (and (= (f20 ?v_0 (f24 ?v_1 f31)) f1) (= (f20 ?v_0 ?v2) f1))))))
(assert (forall ((?v0 S1) (?v1 S12) (?v2 S4) (?v3 S6) (?v4 S4)) (let ((?v_0 (f21 f22 ?v1))) (=> (=> (= ?v0 f1) (= (f20 ?v_0 (f24 (f25 f26 (f27 (f28 (f29 f30 ?v2) ?v3) ?v4)) f31)) f1)) (= (f20 ?v_0 (f24 (f25 f26 (f27 (f28 (f29 f30 (f15 (f16 f17 ?v0) ?v2)) ?v3) ?v4)) f31)) f1)))))
(assert (forall ((?v0 S12) (?v1 S6)) (let ((?v_0 (f21 f22 ?v0))) (=> (= (f20 ?v_0 (f24 (f25 f26 (f33 f34 ?v1)) f31)) f1) (= (f20 ?v_0 (f24 (f25 f26 (f27 (f28 (f29 f30 (f7 f14 ?v1)) ?v1) f5)) f31)) f1)))))
(assert (forall ((?v0 S4) (?v1 S12) (?v2 S6) (?v3 S4)) (=> (forall ((?v4 S2) (?v5 S2)) (=> (= (f3 (f4 ?v0 ?v4) ?v5) f1) (= (f20 (f21 f22 ?v1) (f24 (f25 f26 (f27 (f28 (f29 f30 (f10 f11 ?v5)) ?v2) (f10 (f12 f13 ?v3) ?v4))) f31)) f1))) (= (f20 (f21 f22 ?v1) (f24 (f25 f26 (f27 (f28 (f29 f30 ?v0) ?v2) ?v3)) f31)) f1))))
(assert (forall ((?v0 S12) (?v1 S4) (?v2 S6) (?v3 S4) (?v4 S4)) (let ((?v_0 (f21 f22 ?v0)) (?v_1 (f28 (f29 f30 ?v1) ?v2))) (=> (= (f20 ?v_0 (f24 (f25 f26 (f27 ?v_1 ?v3)) f31)) f1) (=> (forall ((?v5 S2) (?v6 S2)) (=> (= (f3 (f4 ?v3 ?v5) ?v6) f1) (= (f3 (f4 ?v4 ?v5) ?v6) f1))) (= (f20 ?v_0 (f24 (f25 f26 (f27 ?v_1 ?v4)) f31)) f1))))))
(assert (forall ((?v0 S12) (?v1 S4) (?v2 S6) (?v3 S4) (?v4 S4)) (let ((?v_0 (f21 f22 ?v0))) (=> (= (f20 ?v_0 (f24 (f25 f26 (f27 (f28 (f29 f30 ?v1) ?v2) ?v3)) f31)) f1) (=> (forall ((?v5 S2) (?v6 S2)) (=> (= (f3 (f4 ?v4 ?v5) ?v6) f1) (= (f3 (f4 ?v1 ?v5) ?v6) f1))) (= (f20 ?v_0 (f24 (f25 f26 (f27 (f28 (f29 f30 ?v4) ?v2) ?v3)) f31)) f1))))))
(assert (forall ((?v0 S6)) (= (f33 f34 ?v0) (f27 (f28 (f29 f30 f5) ?v0) (f7 f8 ?v0)))))
(assert (= (= f32 f1) (exists ((?v0 S2) (?v1 S2)) (not (= ?v0 ?v1)))))
(assert (=> (= f32 f1) (forall ((?v0 S2)) (=> (forall ((?v1 S2)) (= ?v1 ?v0)) false))))
(assert (forall ((?v0 S11) (?v1 S11) (?v2 S12)) (let ((?v_0 (f35 f36 ?v0))) (=> (= (f20 ?v_0 (f24 (f25 f26 ?v1) ?v2)) f1) (=> (=> (= ?v0 ?v1) false) (=> (=> (= (f20 ?v_0 ?v2) f1) false) false))))))
(assert (forall ((?v0 S11) (?v1 S12) (?v2 S11)) (let ((?v_0 (f35 f36 ?v0))) (=> (=> (not (= (f20 ?v_0 ?v1) f1)) (= ?v0 ?v2)) (= (f20 ?v_0 (f24 (f25 f26 ?v2) ?v1)) f1)))))
(assert (forall ((?v0 S12) (?v1 S4) (?v2 S6) (?v3 S4) (?v4 S4) (?v5 S4)) (let ((?v_0 (f21 f22 ?v0))) (=> (= (f20 ?v_0 (f24 (f25 f26 (f27 (f28 (f29 f30 ?v1) ?v2) ?v3)) f31)) f1) (=> (forall ((?v6 S2) (?v7 S2)) (=> (= (f3 (f4 ?v4 ?v6) ?v7) f1) (forall ((?v8 S2)) (=> (forall ((?v9 S2)) (=> (= (f3 (f4 ?v1 ?v9) ?v7) f1) (= (f3 (f4 ?v3 ?v9) ?v8) f1))) (= (f3 (f4 ?v5 ?v6) ?v8) f1))))) (= (f20 ?v_0 (f24 (f25 f26 (f27 (f28 (f29 f30 ?v4) ?v2) ?v5)) f31)) f1))))))
(assert (forall ((?v0 S11)) (=> (= (f20 (f35 f36 ?v0) f31) f1) false)))
(assert (forall ((?v0 S22) (?v1 S4) (?v2 S6) (?v3 S4)) (= (f37 (f38 f39 ?v0) (f27 (f28 (f29 f30 ?v1) ?v2) ?v3)) (f40 f41 0))))
(assert (forall ((?v0 S12) (?v1 S11)) (=> (= ?v0 f31) (not (= (f20 (f35 f36 ?v1) ?v0) f1)))))
(assert (forall ((?v0 S12)) (= (= (f24 f42 ?v0) f31) (forall ((?v1 S11)) (not (= (f18 ?v0 ?v1) f1))))))
(assert (forall ((?v0 S11)) (= (= (f20 (f35 f36 ?v0) f31) f1) false)))
(assert (forall ((?v0 S12)) (= (= f31 (f24 f42 ?v0)) (forall ((?v1 S11)) (not (= (f18 ?v0 ?v1) f1))))))
(assert (forall ((?v0 S12)) (= (forall ((?v1 S11)) (=> (= (f20 (f35 f36 ?v1) f31) f1) (= (f18 ?v0 ?v1) f1))) true)))
(assert (forall ((?v0 S12)) (= (exists ((?v1 S11)) (and (= (f20 (f35 f36 ?v1) f31) f1) (= (f18 ?v0 ?v1) f1))) false)))
(assert (forall ((?v0 S12)) (= (exists ((?v1 S11)) (= (f20 (f35 f36 ?v1) ?v0) f1)) (not (= ?v0 f31)))))
(assert (forall ((?v0 S12)) (= (forall ((?v1 S11)) (not (= (f20 (f35 f36 ?v1) ?v0) f1))) (= ?v0 f31))))
(assert (= f31 (f24 f42 f19)))
(assert (forall ((?v0 S11) (?v1 S12)) (=> (= (f20 (f35 f36 ?v0) ?v1) f1) (= (f24 (f25 f26 ?v0) ?v1) ?v1))))
(assert (forall ((?v0 S11) (?v1 S12) (?v2 S11)) (let ((?v_0 (f35 f36 ?v0))) (=> (= (f20 ?v_0 ?v1) f1) (= (f20 ?v_0 (f24 (f25 f26 ?v2) ?v1)) f1)))))
(assert (forall ((?v0 S11) (?v1 S12) (?v2 S12)) (let ((?v_0 (f35 f36 ?v0)) (?v_1 (f25 f26 ?v0))) (=> (not (= (f20 ?v_0 ?v1) f1)) (=> (not (= (f20 ?v_0 ?v2) f1)) (= (= (f24 ?v_1 ?v1) (f24 ?v_1 ?v2)) (= ?v1 ?v2)))))))
(assert (forall ((?v0 S11) (?v1 S12) (?v2 S11)) (= (= (f18 (f24 (f25 f26 ?v0) ?v1) ?v2) f1) (or (= ?v0 ?v2) (= (f18 ?v1 ?v2) f1)))))
(assert (forall ((?v0 S11) (?v1 S11) (?v2 S12)) (let ((?v_0 (f35 f36 ?v0))) (= (= (f20 ?v_0 (f24 (f25 f26 ?v1) ?v2)) f1) (or (= ?v0 ?v1) (= (f20 ?v_0 ?v2) f1))))))
(assert (forall ((?v0 S24)) (= (f40 f41 (f43 f44 ?v0)) ?v0)))
(assert (forall ((?v0 Int)) (=> (<= 0 ?v0) (= (f43 f44 (f40 f41 ?v0)) ?v0))))
(assert (forall ((?v0 Int)) (=> (< ?v0 0) (= (f43 f44 (f40 f41 ?v0)) 0))))
(check-sat)
(exit)
