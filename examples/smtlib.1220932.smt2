(set-info :smt-lib-version 2.6)
(set-logic UFLIA)
(set-info :source |Benchmarks from the paper: "Extending Sledgehammer with SMT Solvers" by Jasmin Blanchette, Sascha Bohme, and Lawrence C. Paulson, CADE 2011.  Translated to SMT2 by Andrew Reynolds and Morgan Deters.|)
(set-info :category "industrial")
(set-info :status unknown)
(declare-sort S1 0)
(declare-sort S2 0)
(declare-sort S3 0)
(declare-sort S4 0)
(declare-sort S5 0)
(declare-sort S6 0)
(declare-sort S7 0)
(declare-sort S8 0)
(declare-sort S9 0)
(declare-sort S10 0)
(declare-sort S11 0)
(declare-sort S12 0)
(declare-sort S13 0)
(declare-sort S14 0)
(declare-sort S15 0)
(declare-sort S16 0)
(declare-sort S17 0)
(declare-sort S18 0)
(declare-sort S19 0)
(declare-sort S20 0)
(declare-sort S21 0)
(declare-sort S22 0)
(declare-sort S23 0)
(declare-sort S24 0)
(declare-sort S25 0)
(declare-sort S26 0)
(declare-sort S27 0)
(declare-sort S28 0)
(declare-sort S29 0)
(declare-sort S30 0)
(declare-sort S31 0)
(declare-sort S32 0)
(declare-sort S33 0)
(declare-sort S34 0)
(declare-sort S35 0)
(declare-fun f1 () S1)
(declare-fun f2 () S1)
(declare-fun f3 (S3 S2) S1)
(declare-fun f4 (S4 S2) S3)
(declare-fun f5 () S4)
(declare-fun f6 () S4)
(declare-fun f7 (S7 S5) S1)
(declare-fun f8 (S8 S6) S7)
(declare-fun f9 (S9 S5) S8)
(declare-fun f10 () S9)
(declare-fun f11 () S8)
(declare-fun f12 (S10 S3) S3)
(declare-fun f13 (S11 S2) S10)
(declare-fun f14 () S11)
(declare-fun f15 (S12 S3) S1)
(declare-fun f16 (S13 S2) S12)
(declare-fun f17 () S13)
(declare-fun f18 () S11)
(declare-fun f19 () S11)
(declare-fun f20 () S11)
(declare-fun f21 () S9)
(declare-fun f22 (S14 S6) S8)
(declare-fun f23 (S15 S8) S14)
(declare-fun f24 () S15)
(declare-fun f25 (S16 S8) S8)
(declare-fun f26 (S17 S8) S16)
(declare-fun f27 () S17)
(declare-fun f28 (S18 S7) S8)
(declare-fun f29 (S19 S8) S18)
(declare-fun f30 () S19)
(declare-fun f31 (S20 S1) S16)
(declare-fun f32 () S20)
(declare-fun f33 () S8)
(declare-fun f34 () S8)
(declare-fun f35 () S3)
(declare-fun f36 (S21 S3) S12)
(declare-fun f37 () S21)
(declare-fun f38 () S3)
(declare-fun f39 () S11)
(declare-fun f40 (S22 S8) S2)
(declare-fun f41 (S23 S24) S22)
(declare-fun f42 (S25 S8) S23)
(declare-fun f43 () S25)
(declare-fun f44 () S24)
(declare-fun f45 () S8)
(declare-fun f46 () S3)
(declare-fun f47 () S10)
(declare-fun f48 (S27 S2) S28)
(declare-fun f49 (S29 S26) S27)
(declare-fun f50 () S29)
(declare-fun f51 (S30 Int) S28)
(declare-fun f52 () S30)
(declare-fun f53 (S31 S3) S2)
(declare-fun f54 () S31)
(declare-fun f55 () S1)
(declare-fun f56 () S24)
(declare-fun f57 (S32 S24) S24)
(declare-fun f58 (S33 S7) S32)
(declare-fun f59 () S33)
(declare-fun f60 (S34 S24) S32)
(declare-fun f61 () S34)
(declare-fun f62 () S27)
(declare-fun f63 (S35 S28) Int)
(declare-fun f64 () S35)
(assert (not (= f1 f2)))
(assert (forall ((?v0 S2) (?v1 S2)) (= (= (f3 (f4 f5 ?v0) ?v1) f1) (= ?v0 ?v1))))
(assert (forall ((?v0 S2) (?v1 S2)) (= (= (f3 (f4 f6 ?v0) ?v1) f1) (= ?v1 ?v0))))
(assert (forall ((?v0 S5) (?v1 S6) (?v2 S5)) (= (= (f7 (f8 (f9 f10 ?v0) ?v1) ?v2) f1) (and (= ?v0 ?v2) (= (f7 (f8 f11 ?v1) ?v2) f1)))))
(assert (forall ((?v0 S2) (?v1 S3) (?v2 S2)) (= (= (f3 (f12 (f13 f14 ?v0) ?v1) ?v2) f1) (or (= ?v2 ?v0) (= (f15 (f16 f17 ?v2) ?v1) f1)))))
(assert (forall ((?v0 S2) (?v1 S3) (?v2 S2)) (= (= (f3 (f12 (f13 f18 ?v0) ?v1) ?v2) f1) (and (= ?v0 ?v2) (= (f3 ?v1 ?v2) f1)))))
(assert (forall ((?v0 S2) (?v1 S3) (?v2 S2)) (= (= (f3 (f12 (f13 f19 ?v0) ?v1) ?v2) f1) (and (= ?v2 ?v0) (= (f3 ?v1 ?v2) f1)))))
(assert (forall ((?v0 S2) (?v1 S3) (?v2 S2)) (= (= (f3 (f12 (f13 f20 ?v0) ?v1) ?v2) f1) (=> (not (= ?v2 ?v0)) (= (f3 ?v1 ?v2) f1)))))
(assert (forall ((?v0 S5) (?v1 S6) (?v2 S5)) (= (= (f7 (f8 (f9 f21 ?v0) ?v1) ?v2) f1) (= ?v2 ?v0))))
(assert (forall ((?v0 S8) (?v1 S6) (?v2 S6)) (= (f8 (f22 (f23 f24 ?v0) ?v1) ?v2) (f8 ?v0 ?v1))))
(assert (forall ((?v0 S8) (?v1 S8) (?v2 S6) (?v3 S5)) (= (= (f7 (f8 (f25 (f26 f27 ?v0) ?v1) ?v2) ?v3) f1) (or (= (f7 (f8 ?v0 ?v2) ?v3) f1) (= (f7 (f8 ?v1 ?v2) ?v3) f1)))))
(assert (forall ((?v0 S8) (?v1 S7) (?v2 S6) (?v3 S5)) (= (= (f7 (f8 (f28 (f29 f30 ?v0) ?v1) ?v2) ?v3) f1) (and (= (f7 (f8 ?v0 ?v2) ?v3) f1) (not (= (f7 ?v1 ?v3) f1))))))
(assert (forall ((?v0 S1) (?v1 S8) (?v2 S6) (?v3 S5)) (= (= (f7 (f8 (f25 (f31 f32 ?v0) ?v1) ?v2) ?v3) f1) (and (= (f7 (f8 ?v1 ?v2) ?v3) f1) (= ?v0 f1)))))
(assert (forall ((?v0 S6) (?v1 S5)) (= (= (f7 (f8 f33 ?v0) ?v1) f1) false)))
(assert (forall ((?v0 S6) (?v1 S5)) (= (= (f7 (f8 f34 ?v0) ?v1) f1) true)))
(assert (forall ((?v0 S2)) (= (= (f3 f35 ?v0) f1) false)))
(assert (not (= (f15 (f36 f37 f38) (f12 (f13 f39 (f40 (f41 (f42 f43 f11) f44) f45)) f46)) f1)))
(assert (forall ((?v0 S5)) (= (f15 (f36 f37 f38) (f12 (f13 f39 (f40 (f41 (f42 f43 (f9 f10 ?v0)) f44) f45)) f46)) f1)))
(assert (forall ((?v0 S3)) (= (f15 (f36 f37 ?v0) f46) f1)))
(assert (forall ((?v0 S3) (?v1 S8) (?v2 S24)) (= (f15 (f36 f37 ?v0) (f12 (f13 f39 (f40 (f41 (f42 f43 ?v1) ?v2) f34)) f46)) f1)))
(assert (forall ((?v0 S3) (?v1 S24) (?v2 S8)) (= (f15 (f36 f37 ?v0) (f12 (f13 f39 (f40 (f41 (f42 f43 f33) ?v1) ?v2)) f46)) f1)))
(assert (forall ((?v0 S2)) (let ((?v_0 (f12 (f13 f39 ?v0) f46))) (= (f15 (f36 f37 ?v_0) ?v_0) f1))))
(assert (forall ((?v0 S8) (?v1 S24) (?v2 S8) (?v3 S8) (?v4 S24) (?v5 S8)) (= (= (f40 (f41 (f42 f43 ?v0) ?v1) ?v2) (f40 (f41 (f42 f43 ?v3) ?v4) ?v5)) (and (= ?v0 ?v3) (and (= ?v1 ?v4) (= ?v2 ?v5))))))
(assert (forall ((?v0 S3) (?v1 S3) (?v2 S3)) (let ((?v_0 (f36 f37 ?v2))) (=> (= (f15 (f36 f37 ?v0) ?v1) f1) (=> (= (f15 ?v_0 ?v0) f1) (= (f15 ?v_0 ?v1) f1))))))
(assert (forall ((?v0 S3) (?v1 S2) (?v2 S3)) (let ((?v_0 (f36 f37 ?v0)) (?v_1 (f13 f39 ?v1))) (=> (= (f15 ?v_0 (f12 ?v_1 f46)) f1) (=> (= (f15 ?v_0 ?v2) f1) (= (f15 ?v_0 (f12 ?v_1 ?v2)) f1))))))
(assert (forall ((?v0 S3) (?v1 S2) (?v2 S3)) (let ((?v_0 (f36 f37 ?v0)) (?v_1 (f13 f39 ?v1))) (=> (= (f15 ?v_0 (f12 ?v_1 ?v2)) f1) (and (= (f15 ?v_0 (f12 ?v_1 f46)) f1) (= (f15 ?v_0 ?v2) f1))))))
(assert (forall ((?v0 S3) (?v1 S8) (?v2 S24) (?v3 S8) (?v4 S8) (?v5 S8)) (let ((?v_0 (f36 f37 ?v0))) (=> (= (f15 ?v_0 (f12 (f13 f39 (f40 (f41 (f42 f43 ?v1) ?v2) ?v3)) f46)) f1) (=> (= (f15 ?v_0 (f12 (f13 f39 (f40 (f41 (f42 f43 ?v4) ?v2) ?v5)) f46)) f1) (= (f15 ?v_0 (f12 (f13 f39 (f40 (f41 (f42 f43 (f25 (f26 f27 ?v1) ?v4)) ?v2) (f25 (f26 f27 ?v3) ?v5))) f46)) f1))))))
(assert (forall ((?v0 S1) (?v1 S3) (?v2 S8) (?v3 S24) (?v4 S8)) (let ((?v_0 (f36 f37 ?v1))) (=> (=> (= ?v0 f1) (= (f15 ?v_0 (f12 (f13 f39 (f40 (f41 (f42 f43 ?v2) ?v3) ?v4)) f46)) f1)) (= (f15 ?v_0 (f12 (f13 f39 (f40 (f41 (f42 f43 (f25 (f31 f32 ?v0) ?v2)) ?v3) ?v4)) f46)) f1)))))
(assert (forall ((?v0 S8) (?v1 S3) (?v2 S24) (?v3 S8)) (=> (forall ((?v4 S6) (?v5 S5)) (=> (= (f7 (f8 ?v0 ?v4) ?v5) f1) (= (f15 (f36 f37 ?v1) (f12 (f13 f39 (f40 (f41 (f42 f43 (f9 f21 ?v5)) ?v2) (f22 (f23 f24 ?v3) ?v4))) f46)) f1))) (= (f15 (f36 f37 ?v1) (f12 (f13 f39 (f40 (f41 (f42 f43 ?v0) ?v2) ?v3)) f46)) f1))))
(assert (forall ((?v0 S3) (?v1 S8) (?v2 S24) (?v3 S8) (?v4 S8)) (let ((?v_0 (f36 f37 ?v0)) (?v_1 (f41 (f42 f43 ?v1) ?v2))) (=> (= (f15 ?v_0 (f12 (f13 f39 (f40 ?v_1 ?v3)) f46)) f1) (=> (forall ((?v5 S6) (?v6 S5)) (=> (= (f7 (f8 ?v3 ?v5) ?v6) f1) (= (f7 (f8 ?v4 ?v5) ?v6) f1))) (= (f15 ?v_0 (f12 (f13 f39 (f40 ?v_1 ?v4)) f46)) f1))))))
(assert (forall ((?v0 S3) (?v1 S8) (?v2 S24) (?v3 S8) (?v4 S8)) (let ((?v_0 (f36 f37 ?v0))) (=> (= (f15 ?v_0 (f12 (f13 f39 (f40 (f41 (f42 f43 ?v1) ?v2) ?v3)) f46)) f1) (=> (forall ((?v5 S6) (?v6 S5)) (=> (= (f7 (f8 ?v4 ?v5) ?v6) f1) (= (f7 (f8 ?v1 ?v5) ?v6) f1))) (= (f15 ?v_0 (f12 (f13 f39 (f40 (f41 (f42 f43 ?v4) ?v2) ?v3)) f46)) f1))))))
(assert (forall ((?v0 S2) (?v1 S2) (?v2 S3)) (let ((?v_0 (f16 f17 ?v0))) (=> (= (f15 ?v_0 (f12 (f13 f39 ?v1) ?v2)) f1) (=> (=> (= ?v0 ?v1) false) (=> (=> (= (f15 ?v_0 ?v2) f1) false) false))))))
(assert (forall ((?v0 S2) (?v1 S3) (?v2 S2)) (let ((?v_0 (f16 f17 ?v0))) (=> (=> (not (= (f15 ?v_0 ?v1) f1)) (= ?v0 ?v2)) (= (f15 ?v_0 (f12 (f13 f39 ?v2) ?v1)) f1)))))
(assert (forall ((?v0 S2)) (=> (= (f15 (f16 f17 ?v0) f46) f1) false)))
(assert (forall ((?v0 S3) (?v1 S8) (?v2 S24) (?v3 S8) (?v4 S8) (?v5 S8)) (let ((?v_0 (f36 f37 ?v0))) (=> (= (f15 ?v_0 (f12 (f13 f39 (f40 (f41 (f42 f43 ?v1) ?v2) ?v3)) f46)) f1) (=> (forall ((?v6 S6) (?v7 S5)) (=> (= (f7 (f8 ?v4 ?v6) ?v7) f1) (forall ((?v8 S5)) (=> (forall ((?v9 S6)) (=> (= (f7 (f8 ?v1 ?v9) ?v7) f1) (= (f7 (f8 ?v3 ?v9) ?v8) f1))) (= (f7 (f8 ?v5 ?v6) ?v8) f1))))) (= (f15 ?v_0 (f12 (f13 f39 (f40 (f41 (f42 f43 ?v4) ?v2) ?v5)) f46)) f1))))))
(assert (forall ((?v0 S2)) (= (f12 f47 (f4 f5 ?v0)) (f12 (f13 f39 ?v0) f46))))
(assert (forall ((?v0 S2)) (= (f12 f47 (f4 f6 ?v0)) (f12 (f13 f39 ?v0) f46))))
(assert (forall ((?v0 S2) (?v1 S3)) (= (f12 f47 (f12 (f13 f18 ?v0) ?v1)) (ite (= (f3 ?v1 ?v0) f1) (f12 (f13 f39 ?v0) f46) f46))))
(assert (forall ((?v0 S2) (?v1 S3)) (= (f12 f47 (f12 (f13 f19 ?v0) ?v1)) (ite (= (f3 ?v1 ?v0) f1) (f12 (f13 f39 ?v0) f46) f46))))
(assert (forall ((?v0 S26) (?v1 S8) (?v2 S24) (?v3 S8)) (= (f48 (f49 f50 ?v0) (f40 (f41 (f42 f43 ?v1) ?v2) ?v3)) (f51 f52 0))))
(assert (forall ((?v0 S3) (?v1 S2)) (=> (= ?v0 f46) (not (= (f15 (f16 f17 ?v1) ?v0) f1)))))
(assert (forall ((?v0 S3)) (= (= (f12 f47 ?v0) f46) (forall ((?v1 S2)) (not (= (f3 ?v0 ?v1) f1))))))
(assert (forall ((?v0 S2)) (= (= (f15 (f16 f17 ?v0) f46) f1) false)))
(assert (forall ((?v0 S3)) (= (= f46 (f12 f47 ?v0)) (forall ((?v1 S2)) (not (= (f3 ?v0 ?v1) f1))))))
(assert (forall ((?v0 S3)) (= (forall ((?v1 S2)) (=> (= (f15 (f16 f17 ?v1) f46) f1) (= (f3 ?v0 ?v1) f1))) true)))
(assert (forall ((?v0 S3)) (= (exists ((?v1 S2)) (and (= (f15 (f16 f17 ?v1) f46) f1) (= (f3 ?v0 ?v1) f1))) false)))
(assert (forall ((?v0 S3)) (= (exists ((?v1 S2)) (= (f15 (f16 f17 ?v1) ?v0) f1)) (not (= ?v0 f46)))))
(assert (forall ((?v0 S3)) (= (forall ((?v1 S2)) (not (= (f15 (f16 f17 ?v1) ?v0) f1))) (= ?v0 f46))))
(assert (= f46 (f12 f47 f35)))
(assert (forall ((?v0 S2) (?v1 S3)) (=> (= (f15 (f16 f17 ?v0) ?v1) f1) (= (f12 (f13 f39 ?v0) ?v1) ?v1))))
(assert (forall ((?v0 S2) (?v1 S3) (?v2 S2)) (let ((?v_0 (f16 f17 ?v0))) (=> (= (f15 ?v_0 ?v1) f1) (= (f15 ?v_0 (f12 (f13 f39 ?v2) ?v1)) f1)))))
(assert (forall ((?v0 S2) (?v1 S3) (?v2 S3)) (let ((?v_0 (f16 f17 ?v0)) (?v_1 (f13 f39 ?v0))) (=> (not (= (f15 ?v_0 ?v1) f1)) (=> (not (= (f15 ?v_0 ?v2) f1)) (= (= (f12 ?v_1 ?v1) (f12 ?v_1 ?v2)) (= ?v1 ?v2)))))))
(assert (forall ((?v0 S2) (?v1 S3) (?v2 S2)) (= (= (f3 (f12 (f13 f39 ?v0) ?v1) ?v2) f1) (or (= ?v0 ?v2) (= (f3 ?v1 ?v2) f1)))))
(assert (forall ((?v0 S2) (?v1 S2) (?v2 S3)) (let ((?v_0 (f16 f17 ?v0))) (= (= (f15 ?v_0 (f12 (f13 f39 ?v1) ?v2)) f1) (or (= ?v0 ?v1) (= (f15 ?v_0 ?v2) f1))))))
(assert (forall ((?v0 S2) (?v1 S2) (?v2 S3)) (let ((?v_1 (f13 f39 ?v0)) (?v_0 (f13 f39 ?v1))) (= (f12 ?v_1 (f12 ?v_0 ?v2)) (f12 ?v_0 (f12 ?v_1 ?v2))))))
(assert (forall ((?v0 S2) (?v1 S3)) (let ((?v_0 (f13 f39 ?v0))) (let ((?v_1 (f12 ?v_0 ?v1))) (= (f12 ?v_0 ?v_1) ?v_1)))))
(assert (forall ((?v0 S2) (?v1 S3)) (= (f12 (f13 f39 ?v0) (f12 f47 ?v1)) (f12 f47 (f12 (f13 f20 ?v0) ?v1)))))
(assert (forall ((?v0 S2) (?v1 S3)) (= (f12 (f13 f39 ?v0) ?v1) (f12 f47 (f12 (f13 f14 ?v0) ?v1)))))
(assert (forall ((?v0 S2) (?v1 S3)) (= (f15 (f16 f17 ?v0) (f12 (f13 f39 ?v0) ?v1)) f1)))
(assert (forall ((?v0 S2) (?v1 S3)) (= (f12 (f13 f39 ?v0) ?v1) (f12 f47 (f12 (f13 f14 ?v0) ?v1)))))
(assert (forall ((?v0 S2) (?v1 S2)) (=> (= (f12 (f13 f39 ?v0) f46) (f12 (f13 f39 ?v1) f46)) (= ?v0 ?v1))))
(assert (forall ((?v0 S2) (?v1 S2)) (=> (= (f15 (f16 f17 ?v0) (f12 (f13 f39 ?v1) f46)) f1) (=> (=> (= ?v0 ?v1) false) false))))
(assert (forall ((?v0 S2) (?v1 S2) (?v2 S2) (?v3 S2)) (= (= (f12 (f13 f39 ?v0) (f12 (f13 f39 ?v1) f46)) (f12 (f13 f39 ?v2) (f12 (f13 f39 ?v3) f46))) (or (and (= ?v0 ?v2) (= ?v1 ?v3)) (and (= ?v0 ?v3) (= ?v1 ?v2))))))
(assert (forall ((?v0 S2) (?v1 S2)) (= (= (f15 (f16 f17 ?v0) (f12 (f13 f39 ?v1) f46)) f1) (= ?v0 ?v1))))
(assert (forall ((?v0 S2) (?v1 S3)) (not (= (f12 (f13 f39 ?v0) ?v1) f46))))
(assert (forall ((?v0 S2) (?v1 S3)) (not (= f46 (f12 (f13 f39 ?v0) ?v1)))))
(assert (forall ((?v0 S2)) (= (f53 f54 (f12 (f13 f39 ?v0) f46)) ?v0)))
(assert (forall ((?v0 S2)) (= (= (f3 f46 ?v0) f1) (= f55 f1))))
(assert (forall ((?v0 S2)) (= (= (f3 f46 ?v0) f1) (= f55 f1))))
(assert (forall ((?v0 S3) (?v1 S8)) (= (f15 (f36 f37 ?v0) (f12 (f13 f39 (f40 (f41 (f42 f43 ?v1) f56) ?v1)) f46)) f1)))
(assert (forall ((?v0 S3) (?v1 S8) (?v2 S7) (?v3 S24)) (= (f15 (f36 f37 ?v0) (f12 (f13 f39 (f40 (f41 (f42 f43 (f28 (f29 f30 ?v1) ?v2)) (f57 (f58 f59 ?v2) ?v3)) ?v1)) f46)) f1)))
(assert (forall ((?v0 S3) (?v1 S8) (?v2 S24) (?v3 S8) (?v4 S24) (?v5 S8)) (let ((?v_0 (f36 f37 ?v0)) (?v_1 (f42 f43 ?v1))) (=> (= (f15 ?v_0 (f12 (f13 f39 (f40 (f41 ?v_1 ?v2) ?v3)) f46)) f1) (=> (= (f15 ?v_0 (f12 (f13 f39 (f40 (f41 (f42 f43 ?v3) ?v4) ?v5)) f46)) f1) (= (f15 ?v_0 (f12 (f13 f39 (f40 (f41 ?v_1 (f57 (f60 f61 ?v2) ?v4)) ?v5)) f46)) f1))))))
(assert (forall ((?v0 S8) (?v1 S24) (?v2 S8)) (= (f48 f62 (f40 (f41 (f42 f43 ?v0) ?v1) ?v2)) (f51 f52 0))))
(assert (forall ((?v0 S2)) (=> (forall ((?v1 S8) (?v2 S24) (?v3 S8)) (=> (= ?v0 (f40 (f41 (f42 f43 ?v1) ?v2) ?v3)) false)) false)))
(assert (forall ((?v0 S8) (?v1 S8) (?v2 S3)) (=> (forall ((?v3 S6) (?v4 S5)) (=> (= (f7 (f8 ?v0 ?v3) ?v4) f1) (= (f7 (f8 ?v1 ?v3) ?v4) f1))) (= (f15 (f36 f37 ?v2) (f12 (f13 f39 (f40 (f41 (f42 f43 ?v0) f56) ?v1)) f46)) f1))))
(assert (forall ((?v0 S24) (?v1 S24)) (not (= (f57 (f60 f61 ?v0) ?v1) f56))))
(assert (forall ((?v0 S24) (?v1 S24)) (not (= f56 (f57 (f60 f61 ?v0) ?v1)))))
(assert (forall ((?v0 S7) (?v1 S24)) (not (= (f57 (f58 f59 ?v0) ?v1) f56))))
(assert (forall ((?v0 S7) (?v1 S24)) (not (= f56 (f57 (f58 f59 ?v0) ?v1)))))
(assert (forall ((?v0 S28)) (= (f51 f52 (f63 f64 ?v0)) ?v0)))
(assert (forall ((?v0 Int)) (=> (<= 0 ?v0) (= (f63 f64 (f51 f52 ?v0)) ?v0))))
(assert (forall ((?v0 Int)) (=> (< ?v0 0) (= (f63 f64 (f51 f52 ?v0)) 0))))
(check-sat)
(exit)
