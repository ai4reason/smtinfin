(set-info :smt-lib-version 2.6)
(set-logic UFLIA)
(set-info :source |Benchmarks from the paper: "Extending Sledgehammer with SMT Solvers" by Jasmin Blanchette, Sascha Bohme, and Lawrence C. Paulson, CADE 2011.  Translated to SMT2 by Andrew Reynolds and Morgan Deters.|)
(set-info :category "industrial")
(set-info :status unknown)
(declare-sort S1 0)
(declare-sort S2 0)
(declare-sort S3 0)
(declare-sort S4 0)
(declare-sort S5 0)
(declare-sort S6 0)
(declare-sort S7 0)
(declare-sort S8 0)
(declare-sort S9 0)
(declare-sort S10 0)
(declare-sort S11 0)
(declare-sort S12 0)
(declare-sort S13 0)
(declare-sort S14 0)
(declare-sort S15 0)
(declare-fun f1 () S1)
(declare-fun f2 () S1)
(declare-fun f3 (S2 S2) S1)
(declare-fun f4 (S3 S2) S2)
(declare-fun f5 (S4) S3)
(declare-fun f6 (S5 S6) S4)
(declare-fun f7 () S5)
(declare-fun f8 () S6)
(declare-fun f9 () S2)
(declare-fun f10 (S7 S8) S2)
(declare-fun f11 (S5) S7)
(declare-fun f12 () S8)
(declare-fun f13 (S8) S1)
(declare-fun f14 (S9 S10) Int)
(declare-fun f15 () S9)
(declare-fun f16 () S10)
(declare-fun f17 (S11 S2) S10)
(declare-fun f18 () S11)
(declare-fun f19 (S12 Int) S10)
(declare-fun f20 () S12)
(declare-fun f21 (S6 S8) S1)
(declare-fun f22 (S4 S2) S1)
(declare-fun f23 (S8 S8) S1)
(declare-fun f24 (S13 S8) S8)
(declare-fun f25 (S6) S13)
(declare-fun f26 (S14 S2) S4)
(declare-fun f27 () S14)
(declare-fun f28 () S2)
(declare-fun f29 (S15 S8) S6)
(declare-fun f30 () S15)
(declare-fun f31 () S8)
(assert (not (= f1 f2)))
(assert (not (= (f3 (f4 (f5 (f6 f7 f8)) f9) (f10 (f11 f7) f12)) f1)))
(assert (= (f13 f12) f1))
(assert (= (f3 f9 (f10 (f11 f7) f12)) f1))
(assert (<= (+ (f14 f15 f16) 1) (f14 f15 (f17 f18 (f10 (f11 f7) f12)))))
(assert (= (f17 f18 f9) (f19 f20 (- (f14 f15 (f17 f18 (f10 (f11 f7) f12))) (+ (f14 f15 f16) 1)))))
(assert (= (f21 f8 f12) f1))
(assert (not (= (f22 (f6 f7 f8) f9) f1)))
(assert (forall ((?v0 S4) (?v1 S2) (?v2 S2)) (= (= (f3 (f4 (f5 ?v0) ?v1) ?v2) f1) (and (= (f22 ?v0 ?v2) f1) (= (f3 ?v1 ?v2) f1)))))
(assert (forall ((?v0 S6) (?v1 S8) (?v2 S8)) (= (= (f23 (f24 (f25 ?v0) ?v1) ?v2) f1) (and (= (f21 ?v0 ?v2) f1) (= (f23 ?v1 ?v2) f1)))))
(assert (forall ((?v0 S4)) (= (f26 f27 (f4 (f5 ?v0) f28)) ?v0)))
(assert (forall ((?v0 S6)) (= (f29 f30 (f24 (f25 ?v0) f31)) ?v0)))
(assert (forall ((?v0 S10)) (= (f19 f20 (f14 f15 ?v0)) ?v0)))
(assert (forall ((?v0 Int)) (=> (<= 0 ?v0) (= (f14 f15 (f19 f20 ?v0)) ?v0))))
(assert (forall ((?v0 Int)) (=> (< ?v0 0) (= (f14 f15 (f19 f20 ?v0)) 0))))
(check-sat)
(exit)
