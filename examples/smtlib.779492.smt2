(set-info :smt-lib-version 2.6)
(set-logic UFLIA)
(set-info :source |Benchmarks from the paper: "Extending Sledgehammer with SMT Solvers" by Jasmin Blanchette, Sascha Bohme, and Lawrence C. Paulson, CADE 2011.  Translated to SMT2 by Andrew Reynolds and Morgan Deters.|)
(set-info :category "industrial")
(set-info :status unknown)
(declare-sort S1 0)
(declare-sort S2 0)
(declare-sort S3 0)
(declare-sort S4 0)
(declare-sort S5 0)
(declare-sort S6 0)
(declare-sort S7 0)
(declare-sort S8 0)
(declare-sort S9 0)
(declare-sort S10 0)
(declare-sort S11 0)
(declare-sort S12 0)
(declare-sort S13 0)
(declare-sort S14 0)
(declare-sort S15 0)
(declare-sort S16 0)
(declare-sort S17 0)
(declare-sort S18 0)
(declare-sort S19 0)
(declare-sort S20 0)
(declare-sort S21 0)
(declare-sort S22 0)
(declare-sort S23 0)
(declare-sort S24 0)
(declare-sort S25 0)
(declare-sort S26 0)
(declare-sort S27 0)
(declare-sort S28 0)
(declare-sort S29 0)
(declare-sort S30 0)
(declare-sort S31 0)
(declare-sort S32 0)
(declare-sort S33 0)
(declare-sort S34 0)
(declare-sort S35 0)
(declare-sort S36 0)
(declare-sort S37 0)
(declare-sort S38 0)
(declare-sort S39 0)
(declare-sort S40 0)
(declare-fun f1 () S1)
(declare-fun f2 () S1)
(declare-fun f3 (S3 S2) S4)
(declare-fun f4 () S3)
(declare-fun f5 (S5 S6) S4)
(declare-fun f6 (S7 S8) S5)
(declare-fun f7 (S9 S6) S7)
(declare-fun f8 () S9)
(declare-fun f9 (S10 S2) S6)
(declare-fun f10 () S10)
(declare-fun f11 (S11 S12) S8)
(declare-fun f12 () S11)
(declare-fun f13 (S2) S12)
(declare-fun f14 () S10)
(declare-fun f15 () S3)
(declare-fun f16 (S13 S2) S8)
(declare-fun f17 () S13)
(declare-fun f18 (S14 S10) S3)
(declare-fun f19 (S15 S10) S14)
(declare-fun f20 () S15)
(declare-fun f21 () S15)
(declare-fun f22 (S16 S17) S1)
(declare-fun f23 (S18 S17) S16)
(declare-fun f24 () S18)
(declare-fun f25 () S17)
(declare-fun f26 (S19 S20) S17)
(declare-fun f27 (S21 S3) S19)
(declare-fun f28 () S21)
(declare-fun f29 () S20)
(declare-fun f30 (S22 S17) S17)
(declare-fun f31 (S23 S17) S22)
(declare-fun f32 () S23)
(declare-fun f33 () S18)
(declare-fun f34 (S24 S4) S16)
(declare-fun f35 () S24)
(declare-fun f36 (S25 S20) S1)
(declare-fun f37 (S26 S2) S25)
(declare-fun f38 () S26)
(declare-fun f39 (S27 S20) S20)
(declare-fun f40 (S28 S20) S27)
(declare-fun f41 () S28)
(declare-fun f42 (S17 S4) S1)
(declare-fun f43 (S20 S2) S1)
(declare-fun f44 (S29 S4) S2)
(declare-fun f45 (S30 S17) S20)
(declare-fun f46 (S31 S29) S30)
(declare-fun f47 () S31)
(declare-fun f48 (S33 S32) S17)
(declare-fun f49 () S33)
(declare-fun f50 (S34 Int) S32)
(declare-fun f51 () S34)
(declare-fun f52 (S35 S32) Int)
(declare-fun f53 () S35)
(declare-fun f54 (S37 S4) S32)
(declare-fun f55 (S38 S36) S37)
(declare-fun f56 () S38)
(declare-fun f57 (S39 S1) S1)
(declare-fun f58 (S40 S1) S39)
(declare-fun f59 () S40)
(assert (not (= f1 f2)))
(assert (forall ((?v0 S2)) (= (f3 f4 ?v0) (f5 (f6 (f7 f8 (f9 f10 ?v0)) (f11 f12 (f13 ?v0))) (f9 f14 ?v0)))))
(assert (forall ((?v0 S2)) (= (f3 f15 ?v0) (f5 (f6 (f7 f8 (f9 f10 ?v0)) (f16 f17 ?v0)) (f9 f14 ?v0)))))
(assert (forall ((?v0 S10) (?v1 S10) (?v2 S2)) (= (f3 (f18 (f19 f20 ?v0) ?v1) ?v2) (f5 (f6 (f7 f8 (f9 ?v0 ?v2)) (f11 f12 (f13 ?v2))) (f9 ?v1 ?v2)))))
(assert (forall ((?v0 S10) (?v1 S10) (?v2 S2)) (= (f3 (f18 (f19 f21 ?v0) ?v1) ?v2) (f5 (f6 (f7 f8 (f9 ?v0 ?v2)) (f16 f17 ?v2)) (f9 ?v1 ?v2)))))
(assert (not (= (f22 (f23 f24 f25) (f26 (f27 f28 f15) f29)) f1)))
(assert (= (f22 (f23 f24 (f30 (f31 f32 f25) (f26 (f27 f28 f15) f29))) (f26 (f27 f28 f4) f29)) f1))
(assert (forall ((?v0 S6) (?v1 S8) (?v2 S6) (?v3 S6) (?v4 S8) (?v5 S6)) (= (= (f5 (f6 (f7 f8 ?v0) ?v1) ?v2) (f5 (f6 (f7 f8 ?v3) ?v4) ?v5)) (and (= ?v0 ?v3) (and (= ?v1 ?v4) (= ?v2 ?v5))))))
(assert (forall ((?v0 S17) (?v1 S10) (?v2 S10) (?v3 S20)) (let ((?v_0 (f26 (f27 f28 (f18 (f19 f21 ?v1) ?v2)) ?v3))) (=> (= (f22 (f23 f33 (f30 (f31 f32 ?v0) ?v_0)) (f26 (f27 f28 (f18 (f19 f20 ?v1) ?v2)) ?v3)) f1) (= (f22 (f23 f33 ?v0) ?v_0) f1)))))
(assert (forall ((?v0 S4) (?v1 S17) (?v2 S17)) (let ((?v_0 (f34 f35 ?v0))) (=> (= (f22 ?v_0 (f30 (f31 f32 ?v1) ?v2)) f1) (=> (=> (= (f22 ?v_0 ?v1) f1) false) (=> (=> (= (f22 ?v_0 ?v2) f1) false) false))))))
(assert (forall ((?v0 S2) (?v1 S20) (?v2 S20)) (let ((?v_0 (f37 f38 ?v0))) (=> (= (f36 ?v_0 (f39 (f40 f41 ?v1) ?v2)) f1) (=> (=> (= (f36 ?v_0 ?v1) f1) false) (=> (=> (= (f36 ?v_0 ?v2) f1) false) false))))))
(assert (forall ((?v0 S17) (?v1 S17) (?v2 S4)) (=> (= (f42 (f30 (f31 f32 ?v0) ?v1) ?v2) f1) (=> (=> (= (f42 ?v0 ?v2) f1) false) (=> (=> (= (f42 ?v1 ?v2) f1) false) false)))))
(assert (forall ((?v0 S20) (?v1 S20) (?v2 S2)) (=> (= (f43 (f39 (f40 f41 ?v0) ?v1) ?v2) f1) (=> (=> (= (f43 ?v0 ?v2) f1) false) (=> (=> (= (f43 ?v1 ?v2) f1) false) false)))))
(assert (forall ((?v0 S17) (?v1 S4) (?v2 S17)) (=> (=> (not (= (f42 ?v0 ?v1) f1)) (= (f42 ?v2 ?v1) f1)) (= (f42 (f30 (f31 f32 ?v2) ?v0) ?v1) f1))))
(assert (forall ((?v0 S20) (?v1 S2) (?v2 S20)) (=> (=> (not (= (f43 ?v0 ?v1) f1)) (= (f43 ?v2 ?v1) f1)) (= (f43 (f39 (f40 f41 ?v2) ?v0) ?v1) f1))))
(assert (forall ((?v0 S4) (?v1 S17) (?v2 S17)) (let ((?v_0 (f34 f35 ?v0))) (=> (=> (not (= (f22 ?v_0 ?v1) f1)) (= (f22 ?v_0 ?v2) f1)) (= (f22 ?v_0 (f30 (f31 f32 ?v2) ?v1)) f1)))))
(assert (forall ((?v0 S2) (?v1 S20) (?v2 S20)) (let ((?v_0 (f37 f38 ?v0))) (=> (=> (not (= (f36 ?v_0 ?v1) f1)) (= (f36 ?v_0 ?v2) f1)) (= (f36 ?v_0 (f39 (f40 f41 ?v2) ?v1)) f1)))))
(assert (forall ((?v0 S4) (?v1 S3) (?v2 S2) (?v3 S20)) (=> (= ?v0 (f3 ?v1 ?v2)) (=> (= (f36 (f37 f38 ?v2) ?v3) f1) (= (f22 (f34 f35 ?v0) (f26 (f27 f28 ?v1) ?v3)) f1)))))
(assert (forall ((?v0 S2) (?v1 S29) (?v2 S4) (?v3 S17)) (=> (= ?v0 (f44 ?v1 ?v2)) (=> (= (f22 (f34 f35 ?v2) ?v3) f1) (= (f36 (f37 f38 ?v0) (f45 (f46 f47 ?v1) ?v3)) f1)))))
(assert (forall ((?v0 S32) (?v1 S6) (?v2 S2) (?v3 S6)) (let ((?v_0 (f7 f8 ?v1))) (= (= (f42 (f48 f49 ?v0) (f5 (f6 ?v_0 (f11 f12 (f13 ?v2))) ?v3)) f1) (= (f42 (f48 f49 (f50 f51 (+ (f52 f53 ?v0) 1))) (f5 (f6 ?v_0 (f16 f17 ?v2)) ?v3)) f1)))))
(assert (forall ((?v0 S36) (?v1 S6) (?v2 S8) (?v3 S6)) (= (f54 (f55 f56 ?v0) (f5 (f6 (f7 f8 ?v1) ?v2) ?v3)) (f50 f51 0))))
(assert (forall ((?v0 S3) (?v1 S20) (?v2 S20)) (let ((?v_0 (f27 f28 ?v0))) (= (f26 ?v_0 (f39 (f40 f41 ?v1) ?v2)) (f30 (f31 f32 (f26 ?v_0 ?v1)) (f26 ?v_0 ?v2))))))
(assert (forall ((?v0 S29) (?v1 S17) (?v2 S17)) (let ((?v_0 (f46 f47 ?v0))) (= (f45 ?v_0 (f30 (f31 f32 ?v1) ?v2)) (f39 (f40 f41 (f45 ?v_0 ?v1)) (f45 ?v_0 ?v2))))))
(assert (forall ((?v0 S17) (?v1 S17) (?v2 S4)) (= (= (f42 (f30 (f31 f32 ?v0) ?v1) ?v2) f1) (= (f57 (f58 f59 (f42 ?v0 ?v2)) (f42 ?v1 ?v2)) f1))))
(assert (forall ((?v0 S20) (?v1 S20) (?v2 S2)) (= (= (f43 (f39 (f40 f41 ?v0) ?v1) ?v2) f1) (= (f57 (f58 f59 (f43 ?v0 ?v2)) (f43 ?v1 ?v2)) f1))))
(assert (forall ((?v0 S17) (?v1 S17) (?v2 S17)) (let ((?v_0 (f23 f33 ?v2))) (=> (= (f22 (f23 f33 ?v0) ?v1) f1) (=> (= (f22 ?v_0 ?v0) f1) (= (f22 ?v_0 ?v1) f1))))))
(assert (forall ((?v0 S32) (?v1 S4)) (=> (= (f42 (f48 f49 (f50 f51 (+ (f52 f53 ?v0) 1))) ?v1) f1) (= (f42 (f48 f49 ?v0) ?v1) f1))))
(assert (forall ((?v0 S17) (?v1 S32)) (=> (forall ((?v2 S4)) (=> (= (f22 (f34 f35 ?v2) ?v0) f1) (= (f42 (f48 f49 (f50 f51 (+ (f52 f53 ?v1) 1))) ?v2) f1))) (forall ((?v2 S4)) (=> (= (f22 (f34 f35 ?v2) ?v0) f1) (= (f42 (f48 f49 ?v1) ?v2) f1))))))
(assert (forall ((?v0 S17) (?v1 S17) (?v2 S17)) (let ((?v_0 (f31 f32 ?v0))) (= (f30 (f31 f32 (f30 ?v_0 ?v1)) ?v2) (f30 ?v_0 (f30 (f31 f32 ?v1) ?v2))))))
(assert (forall ((?v0 S20) (?v1 S20) (?v2 S20)) (let ((?v_0 (f40 f41 ?v0))) (= (f39 (f40 f41 (f39 ?v_0 ?v1)) ?v2) (f39 ?v_0 (f39 (f40 f41 ?v1) ?v2))))))
(assert (forall ((?v0 S1) (?v1 S1) (?v2 S1)) (let ((?v_0 (f58 f59 ?v0))) (= (= (f57 (f58 f59 (f57 ?v_0 ?v1)) ?v2) f1) (= (f57 ?v_0 (f57 (f58 f59 ?v1) ?v2)) f1)))))
(assert (forall ((?v0 S17) (?v1 S17) (?v2 S17)) (let ((?v_0 (f31 f32 ?v0))) (= (f30 (f31 f32 (f30 ?v_0 ?v1)) ?v2) (f30 ?v_0 (f30 (f31 f32 ?v1) ?v2))))))
(assert (forall ((?v0 S20) (?v1 S20) (?v2 S20)) (let ((?v_0 (f40 f41 ?v0))) (= (f39 (f40 f41 (f39 ?v_0 ?v1)) ?v2) (f39 ?v_0 (f39 (f40 f41 ?v1) ?v2))))))
(assert (forall ((?v0 S1) (?v1 S1) (?v2 S1)) (let ((?v_0 (f58 f59 ?v0))) (= (= (f57 (f58 f59 (f57 ?v_0 ?v1)) ?v2) f1) (= (f57 ?v_0 (f57 (f58 f59 ?v1) ?v2)) f1)))))
(assert (forall ((?v0 S17) (?v1 S17) (?v2 S17)) (let ((?v_0 (f31 f32 ?v0))) (= (f30 (f31 f32 (f30 ?v_0 ?v1)) ?v2) (f30 ?v_0 (f30 (f31 f32 ?v1) ?v2))))))
(assert (forall ((?v0 S20) (?v1 S20) (?v2 S20)) (let ((?v_0 (f40 f41 ?v0))) (= (f39 (f40 f41 (f39 ?v_0 ?v1)) ?v2) (f39 ?v_0 (f39 (f40 f41 ?v1) ?v2))))))
(assert (forall ((?v0 S1) (?v1 S1) (?v2 S1)) (let ((?v_0 (f58 f59 ?v0))) (= (= (f57 (f58 f59 (f57 ?v_0 ?v1)) ?v2) f1) (= (f57 ?v_0 (f57 (f58 f59 ?v1) ?v2)) f1)))))
(assert (forall ((?v0 S17) (?v1 S17) (?v2 S17)) (let ((?v_1 (f31 f32 ?v0)) (?v_0 (f31 f32 ?v1))) (= (f30 ?v_1 (f30 ?v_0 ?v2)) (f30 ?v_0 (f30 ?v_1 ?v2))))))
(assert (forall ((?v0 S20) (?v1 S20) (?v2 S20)) (let ((?v_1 (f40 f41 ?v0)) (?v_0 (f40 f41 ?v1))) (= (f39 ?v_1 (f39 ?v_0 ?v2)) (f39 ?v_0 (f39 ?v_1 ?v2))))))
(assert (forall ((?v0 S1) (?v1 S1) (?v2 S1)) (let ((?v_1 (f58 f59 ?v0)) (?v_0 (f58 f59 ?v1))) (= (= (f57 ?v_1 (f57 ?v_0 ?v2)) f1) (= (f57 ?v_0 (f57 ?v_1 ?v2)) f1)))))
(assert (forall ((?v0 S17) (?v1 S17) (?v2 S17)) (let ((?v_1 (f31 f32 ?v0)) (?v_0 (f31 f32 ?v1))) (= (f30 ?v_1 (f30 ?v_0 ?v2)) (f30 ?v_0 (f30 ?v_1 ?v2))))))
(assert (forall ((?v0 S20) (?v1 S20) (?v2 S20)) (let ((?v_1 (f40 f41 ?v0)) (?v_0 (f40 f41 ?v1))) (= (f39 ?v_1 (f39 ?v_0 ?v2)) (f39 ?v_0 (f39 ?v_1 ?v2))))))
(assert (forall ((?v0 S1) (?v1 S1) (?v2 S1)) (let ((?v_1 (f58 f59 ?v0)) (?v_0 (f58 f59 ?v1))) (= (= (f57 ?v_1 (f57 ?v_0 ?v2)) f1) (= (f57 ?v_0 (f57 ?v_1 ?v2)) f1)))))
(assert (forall ((?v0 S17) (?v1 S17) (?v2 S17)) (let ((?v_1 (f31 f32 ?v0)) (?v_0 (f31 f32 ?v1))) (= (f30 ?v_1 (f30 ?v_0 ?v2)) (f30 ?v_0 (f30 ?v_1 ?v2))))))
(assert (forall ((?v0 S20) (?v1 S20) (?v2 S20)) (let ((?v_1 (f40 f41 ?v0)) (?v_0 (f40 f41 ?v1))) (= (f39 ?v_1 (f39 ?v_0 ?v2)) (f39 ?v_0 (f39 ?v_1 ?v2))))))
(assert (forall ((?v0 S1) (?v1 S1) (?v2 S1)) (let ((?v_1 (f58 f59 ?v0)) (?v_0 (f58 f59 ?v1))) (= (= (f57 ?v_1 (f57 ?v_0 ?v2)) f1) (= (f57 ?v_0 (f57 ?v_1 ?v2)) f1)))))
(assert (forall ((?v0 S17) (?v1 S17)) (let ((?v_0 (f31 f32 ?v0))) (let ((?v_1 (f30 ?v_0 ?v1))) (= (f30 ?v_0 ?v_1) ?v_1)))))
(assert (forall ((?v0 S20) (?v1 S20)) (let ((?v_0 (f40 f41 ?v0))) (let ((?v_1 (f39 ?v_0 ?v1))) (= (f39 ?v_0 ?v_1) ?v_1)))))
(assert (forall ((?v0 S1) (?v1 S1)) (let ((?v_0 (f58 f59 ?v0))) (let ((?v_1 (f57 ?v_0 ?v1))) (= (= (f57 ?v_0 ?v_1) f1) (= ?v_1 f1))))))
(assert (forall ((?v0 S17) (?v1 S17)) (let ((?v_0 (f31 f32 ?v0))) (let ((?v_1 (f30 ?v_0 ?v1))) (= (f30 ?v_0 ?v_1) ?v_1)))))
(assert (forall ((?v0 S20) (?v1 S20)) (let ((?v_0 (f40 f41 ?v0))) (let ((?v_1 (f39 ?v_0 ?v1))) (= (f39 ?v_0 ?v_1) ?v_1)))))
(assert (forall ((?v0 S1) (?v1 S1)) (let ((?v_0 (f58 f59 ?v0))) (let ((?v_1 (f57 ?v_0 ?v1))) (= (= (f57 ?v_0 ?v_1) f1) (= ?v_1 f1))))))
(assert (forall ((?v0 S17) (?v1 S17)) (let ((?v_0 (f31 f32 ?v0))) (let ((?v_1 (f30 ?v_0 ?v1))) (= (f30 ?v_0 ?v_1) ?v_1)))))
(assert (forall ((?v0 S20) (?v1 S20)) (let ((?v_0 (f40 f41 ?v0))) (let ((?v_1 (f39 ?v_0 ?v1))) (= (f39 ?v_0 ?v_1) ?v_1)))))
(assert (forall ((?v0 S1) (?v1 S1)) (let ((?v_0 (f58 f59 ?v0))) (let ((?v_1 (f57 ?v_0 ?v1))) (= (= (f57 ?v_0 ?v_1) f1) (= ?v_1 f1))))))
(assert (forall ((?v0 S17) (?v1 S17)) (= (f30 (f31 f32 ?v0) ?v1) (f30 (f31 f32 ?v1) ?v0))))
(assert (forall ((?v0 S20) (?v1 S20)) (= (f39 (f40 f41 ?v0) ?v1) (f39 (f40 f41 ?v1) ?v0))))
(assert (forall ((?v0 S1) (?v1 S1)) (= (= (f57 (f58 f59 ?v0) ?v1) f1) (= (f57 (f58 f59 ?v1) ?v0) f1))))
(assert (forall ((?v0 S17) (?v1 S17)) (= (f30 (f31 f32 ?v0) ?v1) (f30 (f31 f32 ?v1) ?v0))))
(assert (forall ((?v0 S20) (?v1 S20)) (= (f39 (f40 f41 ?v0) ?v1) (f39 (f40 f41 ?v1) ?v0))))
(assert (forall ((?v0 S1) (?v1 S1)) (= (= (f57 (f58 f59 ?v0) ?v1) f1) (= (f57 (f58 f59 ?v1) ?v0) f1))))
(assert (forall ((?v0 S17) (?v1 S17)) (= (f30 (f31 f32 ?v0) ?v1) (f30 (f31 f32 ?v1) ?v0))))
(assert (forall ((?v0 S20) (?v1 S20)) (= (f39 (f40 f41 ?v0) ?v1) (f39 (f40 f41 ?v1) ?v0))))
(assert (forall ((?v0 S1) (?v1 S1)) (= (= (f57 (f58 f59 ?v0) ?v1) f1) (= (f57 (f58 f59 ?v1) ?v0) f1))))
(assert (forall ((?v0 S17)) (= (f30 (f31 f32 ?v0) ?v0) ?v0)))
(assert (forall ((?v0 S20)) (= (f39 (f40 f41 ?v0) ?v0) ?v0)))
(assert (forall ((?v0 S1)) (= (= (f57 (f58 f59 ?v0) ?v0) f1) (= ?v0 f1))))
(assert (forall ((?v0 S17)) (= (f30 (f31 f32 ?v0) ?v0) ?v0)))
(assert (forall ((?v0 S20)) (= (f39 (f40 f41 ?v0) ?v0) ?v0)))
(assert (forall ((?v0 S1)) (= (= (f57 (f58 f59 ?v0) ?v0) f1) (= ?v0 f1))))
(assert (forall ((?v0 S2) (?v1 S20) (?v2 S4) (?v3 S3)) (=> (= (f36 (f37 f38 ?v0) ?v1) f1) (=> (= ?v2 (f3 ?v3 ?v0)) (= (f22 (f34 f35 ?v2) (f26 (f27 f28 ?v3) ?v1)) f1)))))
(assert (forall ((?v0 S4) (?v1 S17) (?v2 S2) (?v3 S29)) (=> (= (f22 (f34 f35 ?v0) ?v1) f1) (=> (= ?v2 (f44 ?v3 ?v0)) (= (f36 (f37 f38 ?v2) (f45 (f46 f47 ?v3) ?v1)) f1)))))
(assert (forall ((?v0 S32)) (= (f50 f51 (f52 f53 ?v0)) ?v0)))
(assert (forall ((?v0 Int)) (=> (<= 0 ?v0) (= (f52 f53 (f50 f51 ?v0)) ?v0))))
(assert (forall ((?v0 Int)) (=> (< ?v0 0) (= (f52 f53 (f50 f51 ?v0)) 0))))
(check-sat)
(exit)
