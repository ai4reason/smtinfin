(set-info :smt-lib-version 2.6)
(set-logic UFLIA)
(set-info :source |Benchmarks from the paper: "Extending Sledgehammer with SMT Solvers" by Jasmin Blanchette, Sascha Bohme, and Lawrence C. Paulson, CADE 2011.  Translated to SMT2 by Andrew Reynolds and Morgan Deters.|)
(set-info :category "industrial")
(set-info :status unknown)
(declare-sort S1 0)
(declare-sort S2 0)
(declare-sort S3 0)
(declare-sort S4 0)
(declare-sort S5 0)
(declare-sort S6 0)
(declare-sort S7 0)
(declare-sort S8 0)
(declare-sort S9 0)
(declare-sort S10 0)
(declare-sort S11 0)
(declare-sort S12 0)
(declare-sort S13 0)
(declare-sort S14 0)
(declare-sort S15 0)
(declare-sort S16 0)
(declare-sort S17 0)
(declare-sort S18 0)
(declare-sort S19 0)
(declare-fun f1 () S1)
(declare-fun f2 () S1)
(declare-fun f3 (S3 S2) S4)
(declare-fun f4 () S3)
(declare-fun f5 (S5 S6) S4)
(declare-fun f6 (S7 S8) S5)
(declare-fun f7 (S9 S6) S7)
(declare-fun f8 () S9)
(declare-fun f9 (S2) S6)
(declare-fun f10 (S10) S8)
(declare-fun f11 (S2) S10)
(declare-fun f12 (S2) S6)
(declare-fun f13 () S3)
(declare-fun f14 (S2) S8)
(declare-fun f15 (S4 S11) S1)
(declare-fun f16 () S11)
(declare-fun f17 (S11 S4) S1)
(declare-fun f18 (S12) S11)
(declare-fun f19 (S13 Int) S12)
(declare-fun f20 () S13)
(declare-fun f21 (S14 S15) S11)
(declare-fun f22 (S3) S14)
(declare-fun f23 () S15)
(declare-fun f24 (S16 S11) S11)
(declare-fun f25 (S11) S16)
(declare-fun f26 (S2 S15) S1)
(declare-fun f27 (S18 S11) S15)
(declare-fun f28 (S17) S18)
(declare-fun f29 (S17 S4) S2)
(declare-fun f30 (S19 S12) Int)
(declare-fun f31 () S19)
(assert (not (= f1 f2)))
(assert (forall ((?v0 S2)) (= (f3 f4 ?v0) (f5 (f6 (f7 f8 (f9 ?v0)) (f10 (f11 ?v0))) (f12 ?v0)))))
(assert (forall ((?v0 S2)) (= (f3 f13 ?v0) (f5 (f6 (f7 f8 (f9 ?v0)) (f14 ?v0)) (f12 ?v0)))))
(assert (not (=> (forall ((?v0 S4)) (=> (= (f15 ?v0 f16) f1) (= (f17 (f18 (f19 f20 0)) ?v0) f1))) (forall ((?v0 S4)) (=> (= (f15 ?v0 (f21 (f22 f13) f23)) f1) (= (f17 (f18 (f19 f20 0)) ?v0) f1))))))
(assert (forall ((?v0 S12)) (=> (forall ((?v1 S4)) (=> (= (f15 ?v1 (f24 (f25 f16) (f21 (f22 f13) f23))) f1) (= (f17 (f18 ?v0) ?v1) f1))) (forall ((?v1 S4)) (=> (= (f15 ?v1 (f21 (f22 f4) f23)) f1) (= (f17 (f18 ?v0) ?v1) f1))))))
(assert (forall ((?v0 S4) (?v1 S3) (?v2 S15)) (=> (= (f15 ?v0 (f21 (f22 ?v1) ?v2)) f1) (=> (forall ((?v3 S2)) (=> (= ?v0 (f3 ?v1 ?v3)) (=> (= (f26 ?v3 ?v2) f1) false))) false))))
(assert (forall ((?v0 S2) (?v1 S17) (?v2 S11)) (=> (= (f26 ?v0 (f27 (f28 ?v1) ?v2)) f1) (=> (forall ((?v3 S4)) (=> (= ?v0 (f29 ?v1 ?v3)) (=> (= (f15 ?v3 ?v2) f1) false))) false))))
(assert (forall ((?v0 S12)) (= (f19 f20 (f30 f31 ?v0)) ?v0)))
(assert (forall ((?v0 Int)) (=> (<= 0 ?v0) (= (f30 f31 (f19 f20 ?v0)) ?v0))))
(assert (forall ((?v0 Int)) (=> (< ?v0 0) (= (f30 f31 (f19 f20 ?v0)) 0))))
(check-sat)
(exit)
