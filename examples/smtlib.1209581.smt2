(set-info :smt-lib-version 2.6)
(set-logic UFLIA)
(set-info :source |Benchmarks from the paper: "Extending Sledgehammer with SMT Solvers" by Jasmin Blanchette, Sascha Bohme, and Lawrence C. Paulson, CADE 2011.  Translated to SMT2 by Andrew Reynolds and Morgan Deters.|)
(set-info :category "industrial")
(set-info :status unknown)
(declare-sort S1 0)
(declare-sort S2 0)
(declare-sort S3 0)
(declare-sort S4 0)
(declare-sort S5 0)
(declare-sort S6 0)
(declare-sort S7 0)
(declare-sort S8 0)
(declare-sort S9 0)
(declare-sort S10 0)
(declare-sort S11 0)
(declare-sort S12 0)
(declare-sort S13 0)
(declare-sort S14 0)
(declare-sort S15 0)
(declare-sort S16 0)
(declare-sort S17 0)
(declare-sort S18 0)
(declare-sort S19 0)
(declare-sort S20 0)
(declare-sort S21 0)
(declare-sort S22 0)
(declare-fun f1 () S1)
(declare-fun f2 () S1)
(declare-fun f3 (S3 S2) S1)
(declare-fun f4 (S4 S3) S3)
(declare-fun f5 (S2) S4)
(declare-fun f6 (S2 S3) S1)
(declare-fun f7 (S2) S4)
(declare-fun f8 () S3)
(declare-fun f9 (S3 S3) S1)
(declare-fun f10 () S3)
(declare-fun f11 (S2) S4)
(declare-fun f12 (S5 S6) S2)
(declare-fun f13 (S7 S8) S5)
(declare-fun f14 (S9 S6) S7)
(declare-fun f15 () S9)
(declare-fun f16 () S6)
(declare-fun f17 () S8)
(declare-fun f18 () S6)
(declare-fun f19 () S3)
(declare-fun f20 (S10 S11) S1)
(declare-fun f21 (S10 S11) S1)
(declare-fun f22 (S12 S11) S1)
(declare-fun f23 (S6 S10) S12)
(declare-fun f24 (S14 S2) S15)
(declare-fun f25 (S16 S13) S14)
(declare-fun f26 () S16)
(declare-fun f27 (S17 Int) S15)
(declare-fun f28 () S17)
(declare-fun f29 (S3) S3)
(declare-fun f30 (S18 S3) S2)
(declare-fun f31 () S18)
(declare-fun f32 () S1)
(declare-fun f33 (S19 S8) S8)
(declare-fun f34 (S20 S8) S19)
(declare-fun f35 () S20)
(declare-fun f36 () S14)
(declare-fun f37 (S3 S3) S1)
(declare-fun f38 (S21) S4)
(declare-fun f39 (S3 S3) S1)
(declare-fun f40 (S22 S15) Int)
(declare-fun f41 () S22)
(assert (not (= f1 f2)))
(assert (forall ((?v0 S2) (?v1 S3) (?v2 S2)) (= (= (f3 (f4 (f5 ?v0) ?v1) ?v2) f1) (or (= ?v2 ?v0) (= (f6 ?v2 ?v1) f1)))))
(assert (forall ((?v0 S2) (?v1 S3) (?v2 S2)) (= (= (f3 (f4 (f7 ?v0) ?v1) ?v2) f1) (=> (not (= ?v2 ?v0)) (= (f3 ?v1 ?v2) f1)))))
(assert (forall ((?v0 S2)) (= (= (f3 f8 ?v0) f1) false)))
(assert (not (= (f9 f10 (f4 (f11 (f12 (f13 (f14 f15 f16) f17) f18)) f19)) f1)))
(assert (forall ((?v0 S10) (?v1 S11)) (=> (= (f20 ?v0 ?v1) f1) (= (f21 ?v0 ?v1) f1))))
(assert (forall ((?v0 S3)) (= (f9 ?v0 f19) f1)))
(assert (forall ((?v0 S3) (?v1 S6)) (= (f9 ?v0 (f4 (f11 (f12 (f13 (f14 f15 ?v1) f17) ?v1)) f19)) f1)))
(assert (forall ((?v0 S6) (?v1 S8) (?v2 S6) (?v3 S6) (?v4 S8) (?v5 S6)) (= (= (f12 (f13 (f14 f15 ?v0) ?v1) ?v2) (f12 (f13 (f14 f15 ?v3) ?v4) ?v5)) (and (= ?v0 ?v3) (and (= ?v1 ?v4) (= ?v2 ?v5))))))
(assert (forall ((?v0 S3) (?v1 S3) (?v2 S3)) (=> (= (f9 ?v0 ?v1) f1) (=> (= (f9 ?v2 ?v0) f1) (= (f9 ?v2 ?v1) f1)))))
(assert (forall ((?v0 S3) (?v1 S2) (?v2 S3)) (let ((?v_0 (f11 ?v1))) (=> (= (f9 ?v0 (f4 ?v_0 f19)) f1) (=> (= (f9 ?v0 ?v2) f1) (= (f9 ?v0 (f4 ?v_0 ?v2)) f1))))))
(assert (forall ((?v0 S3) (?v1 S2) (?v2 S3)) (let ((?v_0 (f11 ?v1))) (=> (= (f9 ?v0 (f4 ?v_0 ?v2)) f1) (and (= (f9 ?v0 (f4 ?v_0 f19)) f1) (= (f9 ?v0 ?v2) f1))))))
(assert (forall ((?v0 S3) (?v1 S6) (?v2 S8) (?v3 S6) (?v4 S6)) (let ((?v_0 (f13 (f14 f15 ?v1) ?v2))) (=> (= (f9 ?v0 (f4 (f11 (f12 ?v_0 ?v3)) f19)) f1) (=> (forall ((?v5 S10) (?v6 S11)) (=> (= (f22 (f23 ?v3 ?v5) ?v6) f1) (= (f22 (f23 ?v4 ?v5) ?v6) f1))) (= (f9 ?v0 (f4 (f11 (f12 ?v_0 ?v4)) f19)) f1))))))
(assert (forall ((?v0 S3) (?v1 S6) (?v2 S8) (?v3 S6) (?v4 S6)) (=> (= (f9 ?v0 (f4 (f11 (f12 (f13 (f14 f15 ?v1) ?v2) ?v3)) f19)) f1) (=> (forall ((?v5 S10) (?v6 S11)) (=> (= (f22 (f23 ?v4 ?v5) ?v6) f1) (= (f22 (f23 ?v1 ?v5) ?v6) f1))) (= (f9 ?v0 (f4 (f11 (f12 (f13 (f14 f15 ?v4) ?v2) ?v3)) f19)) f1)))))
(assert (forall ((?v0 S2) (?v1 S2) (?v2 S3)) (=> (= (f6 ?v0 (f4 (f11 ?v1) ?v2)) f1) (=> (=> (= ?v0 ?v1) false) (=> (=> (= (f6 ?v0 ?v2) f1) false) false)))))
(assert (forall ((?v0 S2) (?v1 S3) (?v2 S2)) (=> (=> (not (= (f6 ?v0 ?v1) f1)) (= ?v0 ?v2)) (= (f6 ?v0 (f4 (f11 ?v2) ?v1)) f1))))
(assert (forall ((?v0 S2)) (=> (= (f6 ?v0 f19) f1) false)))
(assert (forall ((?v0 S3) (?v1 S6) (?v2 S8) (?v3 S6) (?v4 S6) (?v5 S6)) (=> (= (f9 ?v0 (f4 (f11 (f12 (f13 (f14 f15 ?v1) ?v2) ?v3)) f19)) f1) (=> (forall ((?v6 S10) (?v7 S11)) (=> (= (f22 (f23 ?v4 ?v6) ?v7) f1) (forall ((?v8 S11)) (=> (forall ((?v9 S10)) (=> (= (f22 (f23 ?v1 ?v9) ?v7) f1) (= (f22 (f23 ?v3 ?v9) ?v8) f1))) (= (f22 (f23 ?v5 ?v6) ?v8) f1))))) (= (f9 ?v0 (f4 (f11 (f12 (f13 (f14 f15 ?v4) ?v2) ?v5)) f19)) f1)))))
(assert (forall ((?v0 S13) (?v1 S6) (?v2 S8) (?v3 S6)) (= (f24 (f25 f26 ?v0) (f12 (f13 (f14 f15 ?v1) ?v2) ?v3)) (f27 f28 0))))
(assert (forall ((?v0 S2) (?v1 S3)) (not (= f19 (f4 (f11 ?v0) ?v1)))))
(assert (forall ((?v0 S2) (?v1 S3)) (not (= (f4 (f11 ?v0) ?v1) f19))))
(assert (forall ((?v0 S2) (?v1 S2)) (= (= (f6 ?v0 (f4 (f11 ?v1) f19)) f1) (= ?v0 ?v1))))
(assert (forall ((?v0 S3) (?v1 S2)) (=> (= ?v0 f19) (not (= (f6 ?v1 ?v0) f1)))))
(assert (forall ((?v0 S3)) (= (= (f29 ?v0) f19) (forall ((?v1 S2)) (not (= (f3 ?v0 ?v1) f1))))))
(assert (forall ((?v0 S2)) (= (= (f6 ?v0 f19) f1) false)))
(assert (forall ((?v0 S3)) (= (= f19 (f29 ?v0)) (forall ((?v1 S2)) (not (= (f3 ?v0 ?v1) f1))))))
(assert (forall ((?v0 S3)) (= (forall ((?v1 S2)) (=> (= (f6 ?v1 f19) f1) (= (f3 ?v0 ?v1) f1))) true)))
(assert (forall ((?v0 S3)) (= (exists ((?v1 S2)) (and (= (f6 ?v1 f19) f1) (= (f3 ?v0 ?v1) f1))) false)))
(assert (forall ((?v0 S3)) (= (exists ((?v1 S2)) (= (f6 ?v1 ?v0) f1)) (not (= ?v0 f19)))))
(assert (forall ((?v0 S3)) (= (forall ((?v1 S2)) (not (= (f6 ?v1 ?v0) f1))) (= ?v0 f19))))
(assert (= f19 (f29 f8)))
(assert (forall ((?v0 S2) (?v1 S3)) (=> (= (f6 ?v0 ?v1) f1) (= (f4 (f11 ?v0) ?v1) ?v1))))
(assert (forall ((?v0 S2) (?v1 S3) (?v2 S2)) (=> (= (f6 ?v0 ?v1) f1) (= (f6 ?v0 (f4 (f11 ?v2) ?v1)) f1))))
(assert (forall ((?v0 S2) (?v1 S3) (?v2 S3)) (let ((?v_0 (f11 ?v0))) (=> (not (= (f6 ?v0 ?v1) f1)) (=> (not (= (f6 ?v0 ?v2) f1)) (= (= (f4 ?v_0 ?v1) (f4 ?v_0 ?v2)) (= ?v1 ?v2)))))))
(assert (forall ((?v0 S2) (?v1 S3) (?v2 S2)) (= (= (f3 (f4 (f11 ?v0) ?v1) ?v2) f1) (or (= ?v0 ?v2) (= (f3 ?v1 ?v2) f1)))))
(assert (forall ((?v0 S2) (?v1 S2) (?v2 S3)) (= (= (f6 ?v0 (f4 (f11 ?v1) ?v2)) f1) (or (= ?v0 ?v1) (= (f6 ?v0 ?v2) f1)))))
(assert (forall ((?v0 S2) (?v1 S2) (?v2 S3)) (let ((?v_1 (f11 ?v0)) (?v_0 (f11 ?v1))) (= (f4 ?v_1 (f4 ?v_0 ?v2)) (f4 ?v_0 (f4 ?v_1 ?v2))))))
(assert (forall ((?v0 S2) (?v1 S3)) (let ((?v_0 (f11 ?v0))) (let ((?v_1 (f4 ?v_0 ?v1))) (= (f4 ?v_0 ?v_1) ?v_1)))))
(assert (forall ((?v0 S2) (?v1 S3)) (= (f4 (f11 ?v0) (f29 ?v1)) (f29 (f4 (f7 ?v0) ?v1)))))
(assert (forall ((?v0 S2) (?v1 S3)) (= (f4 (f11 ?v0) ?v1) (f29 (f4 (f5 ?v0) ?v1)))))
(assert (forall ((?v0 S2) (?v1 S3)) (= (f6 ?v0 (f4 (f11 ?v0) ?v1)) f1)))
(assert (forall ((?v0 S2) (?v1 S2)) (=> (= (f4 (f11 ?v0) f19) (f4 (f11 ?v1) f19)) (= ?v0 ?v1))))
(assert (forall ((?v0 S2) (?v1 S2)) (=> (= (f6 ?v0 (f4 (f11 ?v1) f19)) f1) (=> (=> (= ?v0 ?v1) false) false))))
(assert (forall ((?v0 S2) (?v1 S2) (?v2 S2) (?v3 S2)) (= (= (f4 (f11 ?v0) (f4 (f11 ?v1) f19)) (f4 (f11 ?v2) (f4 (f11 ?v3) f19))) (or (and (= ?v0 ?v2) (= ?v1 ?v3)) (and (= ?v0 ?v3) (= ?v1 ?v2))))))
(assert (forall ((?v0 S2)) (= (f30 f31 (f4 (f11 ?v0) f19)) ?v0)))
(assert (forall ((?v0 S2)) (= (= (f3 f19 ?v0) f1) (= f32 f1))))
(assert (forall ((?v0 S2)) (= (= (f3 f19 ?v0) f1) (= f32 f1))))
(assert (forall ((?v0 S3) (?v1 S6) (?v2 S8) (?v3 S6) (?v4 S8) (?v5 S6)) (let ((?v_0 (f14 f15 ?v1))) (=> (= (f9 ?v0 (f4 (f11 (f12 (f13 ?v_0 ?v2) ?v3)) f19)) f1) (=> (= (f9 ?v0 (f4 (f11 (f12 (f13 (f14 f15 ?v3) ?v4) ?v5)) f19)) f1) (= (f9 ?v0 (f4 (f11 (f12 (f13 ?v_0 (f33 (f34 f35 ?v2) ?v4)) ?v5)) f19)) f1))))))
(assert (forall ((?v0 S6) (?v1 S8) (?v2 S6)) (= (f24 f36 (f12 (f13 (f14 f15 ?v0) ?v1) ?v2)) (f27 f28 0))))
(assert (forall ((?v0 S2)) (=> (forall ((?v1 S6) (?v2 S8) (?v3 S6)) (=> (= ?v0 (f12 (f13 (f14 f15 ?v1) ?v2) ?v3)) false)) false)))
(assert (forall ((?v0 S2) (?v1 S3)) (=> (= (f6 ?v0 ?v1) f1) (=> (forall ((?v2 S3)) (=> (= ?v1 (f4 (f11 ?v0) ?v2)) (=> (not (= (f6 ?v0 ?v2) f1)) false))) false))))
(assert (forall ((?v0 S2) (?v1 S3)) (=> (= (f6 ?v0 ?v1) f1) (exists ((?v2 S3)) (and (= ?v1 (f4 (f11 ?v0) ?v2)) (not (= (f6 ?v0 ?v2) f1)))))))
(assert (forall ((?v0 S3)) (=> (forall ((?v1 S2)) (=> (= (f6 ?v1 ?v0) f1) false)) (= ?v0 f19))))
(assert (forall ((?v0 S6) (?v1 S3) (?v2 S8) (?v3 S6)) (=> (forall ((?v4 S10) (?v5 S11)) (=> (= (f22 (f23 ?v0 ?v4) ?v5) f1) (exists ((?v6 S6) (?v7 S6)) (and (= (f9 ?v1 (f4 (f11 (f12 (f13 (f14 f15 ?v6) ?v2) ?v7)) f19)) f1) (forall ((?v8 S11)) (=> (forall ((?v9 S10)) (=> (= (f22 (f23 ?v6 ?v9) ?v5) f1) (= (f22 (f23 ?v7 ?v9) ?v8) f1))) (= (f22 (f23 ?v3 ?v4) ?v8) f1))))))) (= (f9 ?v1 (f4 (f11 (f12 (f13 (f14 f15 ?v0) ?v2) ?v3)) f19)) f1))))
(assert (forall ((?v0 S8) (?v1 S8)) (not (= f17 (f33 (f34 f35 ?v0) ?v1)))))
(assert (forall ((?v0 S8) (?v1 S8)) (not (= (f33 (f34 f35 ?v0) ?v1) f17))))
(assert (forall ((?v0 S8) (?v1 S8) (?v2 S8) (?v3 S8)) (= (= (f33 (f34 f35 ?v0) ?v1) (f33 (f34 f35 ?v2) ?v3)) (and (= ?v0 ?v2) (= ?v1 ?v3)))))
(assert (forall ((?v0 S3)) (= (not (= ?v0 f19)) (exists ((?v1 S2) (?v2 S3)) (and (= ?v0 (f4 (f11 ?v1) ?v2)) (not (= (f6 ?v1 ?v2) f1)))))))
(assert (forall ((?v0 S2)) (= (= (f3 f19 ?v0) f1) (= (f6 ?v0 f19) f1))))
(assert (forall ((?v0 S3) (?v1 S3)) (=> (= (f9 ?v0 ?v1) f1) (= (f37 ?v0 ?v1) f1))))
(assert (forall ((?v0 S21) (?v1 S2) (?v2 S2)) (= (= (f3 (f4 (f38 ?v0) (f4 (f11 ?v1) f19)) ?v2) f1) (= ?v1 ?v2))))
(assert (forall ((?v0 S3) (?v1 S2)) (let ((?v_0 (f4 (f11 ?v1) f19))) (=> (= (f39 ?v0 ?v_0) f1) (or (= ?v0 f19) (= ?v0 ?v_0))))))
(assert (forall ((?v0 S3)) (= (f39 ?v0 ?v0) f1)))
(assert (forall ((?v0 S3) (?v1 S3)) (=> (= (f39 ?v0 ?v1) f1) (=> (= (f39 ?v1 ?v0) f1) (= ?v0 ?v1)))))
(assert (forall ((?v0 S3) (?v1 S3) (?v2 S2)) (=> (= (f39 ?v0 ?v1) f1) (=> (= (f6 ?v2 ?v0) f1) (= (f6 ?v2 ?v1) f1)))))
(assert (forall ((?v0 S3)) (= (f39 f19 ?v0) f1)))
(assert (forall ((?v0 S15)) (= (f27 f28 (f40 f41 ?v0)) ?v0)))
(assert (forall ((?v0 Int)) (=> (<= 0 ?v0) (= (f40 f41 (f27 f28 ?v0)) ?v0))))
(assert (forall ((?v0 Int)) (=> (< ?v0 0) (= (f40 f41 (f27 f28 ?v0)) 0))))
(check-sat)
(exit)
