(compile-file "smtintfuncsynth.lisp")
(load "smtintfuncsynth.fasl")
(defun main ()
  (declaim (sb-ext:muffle-conditions cl:warning))
  (if (not (cdr sb-ext:*posix-argv*))
      (format t "Usage: smtintfuncsynth [-t <mstimelimit>] [-v <num>] [-lash <lashexec>] [-cvc5 <cvc5exec>] <smt2file>~%")
    (let ((fn (car (last sb-ext:*posix-argv*))))
      (let ((tm (member "-t" sb-ext:*posix-argv* :test #'equal)))
	(when tm (setq *tlimitms* (read-from-string (cadr tm)))))
      (let ((v (member "-v" sb-ext:*posix-argv* :test #'equal)))
	(when v (setq *verbosity* (read-from-string (cadr v)))))
      (let ((l (member "-lash" sb-ext:*posix-argv* :test #'equal)))
	(when l (setq *lash* (cadr l))))
      (let ((l (member "-cvc5" sb-ext:*posix-argv* :test #'equal)))
	(when l (setq *cvc5* (cadr l))))
      (smtintfuncsynth fn)
      (exit))))

(sb-ext:save-lisp-and-die "smtintfuncsynth" :save-runtime-options t :executable t :toplevel #'main)
